{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"A standard to describe the accessibility of the physical world.","text":"<p> A11yJSON is an open standard based on GeoJSON (RFC 7946). Its goal is to make accessibility information more comfortable to exchange.</p> <p>Integrate A11yJSON into data schemas that describe\u2026</p> <ul> <li>real places</li> <li>local amenities</li> <li>sanitary facilities</li> <li>physical media and services</li> <li>policies that can be barriers (like dog friendliness)</li> <li>escalators and elevators (including their real-time operational status)</li> </ul> <p>This is a valid A11yJSON data snippet:</p> <pre><code>{\n\"entrances\": [\n{ \"name\": \"30th St\", \"isMainEntrance\": true, \"isLevel\": false },\n{ \"name\": \"Side gate\", \"hasFixedRamp\": true }\n],\n\"animalPolicy\": {\n\"allowsGuideDogs\": false\n}\n}\n</code></pre> <p>See the examples for more complex definitions, or the list of accessibility criteria to see the format's extent.</p>"},{"location":"#is-this-for-me","title":"Is this for me?","text":"<p>If you build an app that digitalizes any aspect of real life, you decide if it adds a new barrier to this real world \u2013 or creates a new entrance. Use this power wisely and ensure that your data design is inclusive. \ud83e\uddbe</p> <p>A11yJSON can help you if you work with data in\u2026</p> <ul> <li>Architecture</li> <li>Indoor navigation</li> <li>Facility management</li> <li>Accessibility surveys</li> <li>Location-based services</li> <li>Outdoor/transit navigation</li> <li>Building Information Management (BIM)</li> </ul> <p>Here is a list of projects using A11yJSON.</p>"},{"location":"#technically","title":"Technically\u2026","text":"<p>A11yJSON provides a collection of documented interfaces for structuring data in your projects \u2013 no matter which language you use.</p> <p>It comes with a TypeScript library to check your data structures at compile-time.</p> <p>For web and Node.js, there is <code>@sozialhelden/a11yjson</code>, a npm module. The model validates data at runtime using <code>SimpleSchema</code>,  sanitizes input, and returns sophisticated error messages for wrong data.</p> <p>The schema definition API is simple to read, so the schema should be portable to other schema languages (GraphQL, JSON Schema, \u2026), if necessary. If you have a specific idea, let\u2019s talk!</p>"},{"location":"#who-is-behind-a11yjson","title":"Who is behind A11yJSON?","text":"<p>A11yJSON is made by Sozialhelden e.V., a non-profit that works on innovative solutions to social issues. It\u2019s based in Berlin, Germany, and known for Wheelmap.org, the world\u2019s biggest open online map of accessible places.</p>"},{"location":"#finally","title":"Finally\u2026","text":"<p>If you think that A11yJSON deserves attention, consider giving it a Star on GitHub, and sharing it on Twitter! \ud83d\ude4c</p>"},{"location":"0-usage/","title":"Usage","text":""},{"location":"0-usage/#installing-the-npm-module","title":"Installing the npm module","text":"<pre><code>npm install --save @sozialhelden/a11yjson\n</code></pre>"},{"location":"0-usage/#basics","title":"Basics","text":"<p>A11yJSON's reference provides a documentation of all available interfaces and has example A11yJSON objects.</p> <p>For each interface <code>X</code> you find in the reference, the <code>a11yjson</code> npm module provides</p> <ol> <li>a TypeScript interface <code>X</code> (if you use TypeScript)</li> <li>a SimpleSchema instance named <code>XSchema</code> to validate and sanitize objects to be correct A11yJSON</li> </ol>"},{"location":"0-usage/#typescript-usage","title":"TypeScript usage","text":"<pre><code>import { PlaceInfo } from '@sozialhelden/a11yjson';\n\nconst placeInfo: PlaceInfo = {\ngeometry: { type: Point, coordinates: [2.376757, 48.898991] },\nproperties: {\ncategory: \"cinema\",\nname: \"Cin\u00e9 XY\",\naccessibility: {\naccessibleWith: {\nguideDog: true,\nwheelchair: true,\n},\nmedia: [\n{\ntype: 'movie',\ninteractions: {\nwatch: {\nperception: {\nlanguages: ['fr'],\ndedicatedScreenForSubtitles: true,\nsubtitles: true,\naudioDescription: true,\nbyod: true,\neducationLevel: 3,\nvisual: true,\nrealTimeCaptioning: true,\nsignLanguage: true,\n}\n}\n}\n}\n]\n}\n}\n}\n</code></pre> <p>The TypeScript compiler will validate definitions at compile time.</p>"},{"location":"0-usage/#validating-a11yjson-objects-at-runtime","title":"Validating A11yJSON objects at runtime","text":"<p>The following code imports one interface schema, <code>PlaceInfoSchema</code>, from A11yJSON, and validates an object against it.</p> <p>If the object isn't valid, you get a detailed error object as validation result.</p> <pre><code>import { getPlaceInfoSchemaDefinition } from '@sozialhelden/a11yjson';\n\nconst PlaceInfoSchema = new SimpleSchema(getPlaceInfoSchemaDefinition());\n\n// This could be your GeoJSON feature.\n\nconst myGeoJSONFeature = {\ngeometry: { \u2026 }\nproperties: { \u2026 }\n};\n\n// See https://github.com/aldeed/simple-schema-js for the full documentation\n// of how validation works.\n\nconst validationContext = PlaceInfoSchema.newContext();\n\n// Sanitizes the input object.\n// Converts types to match the schema where possible, and converts quantity\n// strings like '12 inches' to Quantity objects like { value: 12, unit: 'inch' }.\n\nconst sanitizedGeoJSONFeature = PlaceInfoSchema.clean(myGeoJSONFeature);\n\n// Checks if the GeoJSON is a valid A11yJSON\u2019s `PlaceInfo`.\n\nvalidationContext.validate(sanitizedGeoJSONFeature);\n\nif (!validationContext.isValid()) {\nconst errors = validationContext.validationErrors();\n\n// `errors` is a JSON object with detailled validation infos about each field\n// in the input object.\n\nconsole.log(errors);\n}\n</code></pre>"},{"location":"1-example-data/","title":"Example data","text":""},{"location":"1-example-data/#placeinfo","title":"<code>PlaceInfo</code>","text":"<p>This JSON describes a tourism office in Saxonia, Germany, as <code>PlaceInfo</code> with <code>PlaceProperties</code>. It has wheelchair accessible parking. The restrooms are wheelchair accessible. Despite having a level entrance (no steps), the building is only partially accessible with a wheelchair:</p> <pre><code>{\n\"geometry\": { \"type\": \"Point\", \"coordinates\": [11.14204, 51.78911] },\n\"properties\": {\n\"category\": \"tourism\",\n\"name\": \"Quedlinburg-Information\",\n\"accessibility\": {\n\"parking\": {\n\"forWheelchairUsers\": { \"isAvailable\": true }\n},\n\"entrances\": [\n{ \"isLevel\": true }\n],\n\"restrooms\": [\n{ \"isAccessibleWithWheelchair\": false }\n],\n\"accessibleWith\": { \"guideDog\": true },\n\"partiallyAccessibleWith\": { \"wheelchair\": true }\n},\n\"infoPageUrl\": \"http://...\",\n\"phoneNumber\": \"+49 3946 905-624\",\n\"placeWebsiteUrl\": \"https://www.quedlinburg.de\",\n\"address\": {\n\"street\": \"Markt 4 \",\n\"postcode\": \"06484 \",\n\"city\": \"Quedlinburg\",\n\"state\": \"Sachsen-Anhalt\",\n\"country\": \"Deutschland\",\n\"countryCode\": \"DE\"\n},\n}\n}\n</code></pre>"},{"location":"1-example-data/#a-cinema-that-is-dog-friendly-and-wheelchair-accessible-offering-audio-descriptions","title":"A cinema that is dog-friendly and wheelchair accessible, offering audio descriptions","text":"<pre><code>{\n\"geometry\": { \"type\": \"Point\", \"coordinates\": [2.376757, 48.898991] },\n\"properties\": {\n\"category\": \"cinema\",\n\"name\": \"Cin\u00e9 XY\",\n\"accessibility\": {\n\"accessibleWith\": {\n\"guideDog\": true,\n\"wheelchair\": true,\n},\n\"offersActivitiesForPeopleWith\": {\n\"visuallyImpairment\": true,\n}\n}\n}\n}\n</code></pre>"},{"location":"1-example-data/#a-restaurant-with-a-braille-menu","title":"A restaurant with a braille menu","text":"<pre><code>{\n\"properties\": {\n\"category\": \"restaurant\",\n\"accessibility\": {\n\"media\": [\n{ \"type\": \"menu\", \"isBraille\": true }\n]\n}\n}\n}\n</code></pre>"},{"location":"1-example-data/#a-museum-with-a-guided-tour-in-german-sign-language","title":"A museum with a guided tour in German Sign Language","text":"<p>See also (language code <code>\"gsg\"</code> or <code>\"sgn-gsg\"</code>).</p> <pre><code>{\n\"properties\": {\n\"category\": \"museum\",\n\"accessibility\": {\n\"media\": [\n{ \"type\": \"tour\", \"languages\": [\"sgn-gsg\"] }\n]\n}\n}\n}\n</code></pre>"},{"location":"1-example-data/#a-museum-with-tactile-models","title":"A museum with tactile models","text":""},{"location":"1-example-data/#variant-1","title":"Variant 1","text":"<pre><code>{\n\"properties\": {\n\"category\": \"museum\",\n\"accessibility\": {\n\"media\": [\n{\n\"type\": \"exhibit\",\n\"accessMode\": [\"tactile\"],\n\"accessModeSufficient\": [\"tactile\"],\n\"name\": { \"en\": \"Collection of tactile models\" }\n}\n]\n}\n}\n}\n</code></pre>"},{"location":"1-example-data/#variant-2","title":"Variant 2","text":"<pre><code>{\n\"properties\": {\n\"category\": \"museum\",\n\"accessibility\": {\n\"media\": [\n{\n\"type\": \"exhibit\",\n\"isTactile\": true,\n\"name\": { \"en\": \"Collection of tactile models\" }\n}\n]\n}\n}\n}\n</code></pre>"},{"location":"1-example-data/#equipmentinfo","title":"<code>EquipmentInfo</code>","text":""},{"location":"1-example-data/#an-equipmentinfo-record-for-an-elevator-in-berlin-that-is-in-service-including-realtime-operational-status-information","title":"An <code>EquipmentInfo</code> record for an elevator in Berlin that is in service, including realtime operational status information","text":"<pre><code>{\n\"geometry\": { \"type\": \"Point\", \"coordinates\": [13.343837, 52.536183] },\n\"properties\": {\n\"category\": \"elevator\",\n\"isWorking\": true,\n\"originalId\": \"283\",\n\"originalPlaceInfoId\": \"900001201\",\n\"placeInfoId\": \"HKewiFCNgCCQS3ErP\",\n\"shortDescription\": \"Fu\u00dfg\u00e4ngertunnel U-/S-Bahnsteig \u27f7 U-Bahnsteig\",\n\"description\": \"Fu\u00dfg\u00e4ngertunnel, U- und S-Bahnsteig, und U-Bahnsteig\",\n\"longDescription\": \"zwischen dem Fu\u00dfg\u00e4ngertunnel, dem U- und S-Bahnsteig, und dem U-Bahnsteig\",\n}\n}\n</code></pre>"},{"location":"1-example-data/#a-elevator-in-hamburg-with-accessibility-features-that-is-out-of-service","title":"A elevator in Hamburg with <code>accessibility</code> features that is out of service","text":"<pre><code>{\n\"geometry\": { \"type\": \"Point\", \"coordinates\": [10.067907, 53.581786] },\n\"properties\": {\n\"category\": \"elevator\",\n\"isWorking\": false,\n\"shortDescription\": \"Stra\u00dfenebene \u27f7 Schalterhalle\",\n\"description\": \"zwischen Stra\u00dfenebene und Schalterhalle\",\n\"longDescription\": \"zwischen der Stra\u00dfenebene und der Schalterhalle\",\n\"placeInfoId\": \"4xaRom9QqMAxgxQnx\",\n\"accessibility\": {\n\"hasBrailleText\": true,\n\"hasSpeech\": true,\n\"hasDoorsInBothDirections\": false\n},\n}\n}\n</code></pre>"},{"location":"2-who-uses-a11yjson/","title":"Who uses A11yJSON?","text":"<p>The following organizations / products use A11yJSON.</p> <ul> <li>Several cities in Germany, for example Karlsruhe, Potsdam, and Augsburg, use A11yJSON to collect data about the accessibility of their buildings.</li> <li>Wheelmap.org, world's biggest open online map for accessible places.</li> <li>accessibility.cloud, an A11yJSON-based accessibility data exchange.   Apps can consume existing A11yJSON datasets from   accessibility.cloud's API.</li> <li>I Wheel Share, a French NGO that has created a chatbot for discovering   accessible places all over France.</li> <li>ImmoScout24, a real estate platform in Germany and   Austria, to show accessible places of interest around apartments and houses.</li> <li>WheelPilot,   a pilot to explore accessibility in car navigation, by Daimler AG.</li> <li>Gelbe Seiten, Germany's Yellow Pages.</li> <li>brokenlifts.org, to display alerts about broken lifts in German public   transit networks.</li> </ul> <p>Contact us if you want your organization to show up on this list.</p>"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#should-i-use-this-standard","title":"Should I use this standard?","text":"<p>Yes, until there is something better. Even if you cannot adapt the whole format as part of your own indoor mapping specs, it\u2019s a good idea to adapt single interfaces where you see fit.</p> <p>Note that A11yJSON does not yet cover the full details of services, tangible products, or events yet. Extensions are welcome!</p>"},{"location":"faq/#what-about-linked-data","title":"What about Linked Data?","text":"<p>Accessibility data should be shareable in a decentralized fashion, and we think that physical accessibility is a topic that is too important to let one single NGO coordinate it.</p> <p>Work is happening at the W3C to create a web community standard successor, based on a Linked Data graph. We have co-founded the W3C Linked Data for Accessibility (LDA)  Community Group, so you can take part in the standardization, too! Community standardizations are no quick processes, though, so using A11yJSON is a safe bet for a while.</p>"},{"location":"faq/#can-you-add-new-criteria","title":"Can you add new criteria?","text":"<p>Please file an issue so we can discuss how to extend the format. Pull requests are welcome if a discussion happens first. Please ensure your pull requests include tests!</p>"},{"location":"faq/#i-have-no-resources-to-convert-my-dataset-to-a11yjson-are-there-alternatives-to-share-the-data","title":"I have no resources to convert my dataset to A11yJSON. Are there alternatives to share the data?","text":"<p>If you want to make your data available to others but lack the resources to convert or migrate your data to A11yJSON, there is a way to do this. It\u2019s enough if your data schema has similarities to A11yJSON\u2019s attribute names and nesting.</p> <p>Whether you use A11yJSON or a similar format, as long as your data is available as CSV, JSON, XML, or over a web API, you can publish the data on accessibility.cloud. The platform makes your data consumable as A11yJSON. The team offers support to help you get your datasets transformed and shared with others. (It\u2019s up to you if you want to share the dataset as open data, or limit access to specific organizations.)</p>"},{"location":"faq/#what-does-the-a11y-in-a11yjson-mean","title":"What does the \u2018A11y\u2019 in A11yJSON mean?","text":"<p>Like I18n and l10n, a11y is a shorthand for \u2018accessibility\u2019.  11 is the number of letters between the \u2018a\u2019 and the \u2018y\u2019 in the word \u2018accessiblity\u2019. Voice assistants pronounce it \u2018A-one-one-Y\u2019, and some people pronounce it \u2018A-eleven-Y\u2019. The most common pronunciation is the phonetic \u2018\u00e6laj\u2019. Some find this pronunciation plain wrong; others want the numeronym to die. It\u2019s quicker to type than the full a-word, though, so our hunch is that it\u2019s here to stay.</p>"},{"location":"faq/#i-cant-use-javascriptsimpleschema-can-i-still-use-a11yjson","title":"I can't use JavaScript/SimpleSchema. Can I still use A11yJSON?","text":"<p>Of course! Just integrate its documented interfaces into your own data types.</p> <p>A11yJSON\u2019s TypeScript schema comes with runtime-types in <code>SimpleSchema</code>. This allows to auto-generate schemas in other description languages. We\u2019d love to see your contributions as npm modules or libraries for other ecosystems and languages, such as:</p> <ul> <li>GraphQL</li> <li>JSONSchema</li> <li>OpenAPI / Swagger</li> <li>Interfaces/types in other typed languages</li> </ul>"},{"location":"i18n/","title":"Internationalization","text":"<p>In A11yJSON, you can localize all human-readable strings using JSON objects with IETF language tags as property names and the translations as property values:</p> <pre><code>{\n\"en\": \"Accessibility\",\n\"de\": \"Zug\u00e4nglichkeit\",\n\"zh-Hans\": \"\u65e0\u969c\u788d\",\n\"ase\": \"https://www.handspeak.com/word/search/index.php?id=1643\"\n}\n</code></pre> <p>This is optional - the specification allows to use a string, too.</p> <p>We encourage you to localize your strings\u2014If available, you can even use IETF sign language tags (like <code>ase</code> for American Sign Language) for adding sign language localization using video, image or website URLs.</p>"},{"location":"x-contributing/","title":"Contributing","text":"<p>We're delighted you're reading this because we need volunteer developers to help this project come to fruition. \ud83d\udc4f</p> <p>This project is not complete and will never be. We're open to your suggestions and comments, no matter if you have an idea for A11yJSON, if you want to share data on platforms like Wheelmap, or if you want to consume it in your own apps (for example, from accessibility.cloud).</p> <p>Say hi via email or create an issue!</p> <p>Please respect our Code of Conduct.</p> <p>Even if you don\u2019t have the resources to contribute code, you can help A11yJSON by spreading the word.</p> <ul> <li>Share your support on Twitter</li> <li>Give the repository a Star on GitHub</li> </ul>"},{"location":"x-contributing/#pull-requests","title":"Pull requests","text":"<p>Before you make a pull request, please open an issue so we can discuss the contribution you want to make.</p> <p>These steps guide you through contributing to this project:</p> <ul> <li>Fork the repo</li> <li> <p>Clone it and install dependencies</p> <pre><code>git clone https://github.com/sozialhelden/a11yjson\nnpm install\n</code></pre> </li> <li> <p>Make and commit your changes.</p> </li> <li>Include tests and documentation.</li> <li>Ensure that <code>npm run build</code> and <code>npm run test:prod</code> are still working without errors after your changes.</li> </ul> <p>Finally, send a GitHub Pull Request with a clear list of what you've done (read more about pull requests). If possible, your commits should be atomic (one feature per commit).</p>"},{"location":"x-contributing/#documentation-with-mkdocs-material","title":"Documentation with <code>mkdocs-material</code>","text":"<p>Prerequisites: Have a local Docker installation.</p> <pre><code>npm run docs:install        # Installs the mkdocs-material Docker image\n\nnpm run docs:live           # Run this while making changes in the docs/ Markdown files\n\nnpm run docs:deploy         # Deploys the documentation on GitHub pages\n</code></pre>"},{"location":"best-practices/bad-examples-and-how-to-improve-them/","title":"Bad examples and how to improve them","text":""},{"location":"best-practices/bad-examples-and-how-to-improve-them/#dos-and-donts","title":"Do\u2019s and Don\u2019ts","text":"<p>The table below displays Do\u2019s and Don\u2019ts of accessibility characterizations.</p> Bad example Recommendation \u2018The place is not accessible in a wheelchair\u2019 \u2018There is one step at the entrance, its height is 2 inches\u2019 \u2018The place has offers for blind people\u2019 Explain the available facilities, e.g. audio description, tactile ground surfaces, or that a restaurant menu is available in Braille text. \u2018The sitemap is accessible for blind people\u2019 \u2018The sitemap is available in braille\u2019 or \u2018The sitemap has high contrast and uses big fonts\u2019 \u2018The staff is trained in accomodating people with disabilities\u2019 Explain which facilities or services exist in detail. \u2018Wheelchair users gave this place \u2157 stars\u2019 Explain the facilities wheelchair users can find at the place. Is there a step at the entrance? A wheelchair-accessible toilet? Do you need a special key to open the door? If this is too complex, you can offer a traffic light system like Wheelmap.org - but if you do so, the criteria for red/yellow/green must be easy to find in the UI, and the rating must be guided to get consistent data. If you use a traffic light system, use more than colors to differentiate between different levels of accessibility - your color-blind audience will thank you!"},{"location":"best-practices/bad-examples-and-how-to-improve-them/#examples-of-helpful-measurable-data-points","title":"Examples of helpful, measurable data points","text":"<ul> <li>\u2018The entrance has an automatic door\u2019</li> <li>\u2018The entrance has one step with 4cm height</li> <li>\u2018There is a braille sitemap with raised letters and shapes\u2019</li> <li>\u2018There are side rails with braille navigation\u2019</li> <li>\u2018All floors have tactile paving\u2019</li> <li>\u2018All elevators have speech output, but no braille controls\u2019</li> <li>\u2018The audition hall has an induction loop\u2019</li> <li>\u2018The menu has a photo of each dish\u2019</li> </ul>"},{"location":"best-practices/copytext-accessibility/","title":"Copytext accessibility, the opportunity you likely missed","text":"<p>If you design user interfaces, you know that written text in your product has a significant impact on its user experience: Crafting concise copytext is tricky, but worth it. Vice-versa: mediocre copytext or typography ruins an app's credibility. If your app plays a vital role for somebody, faulty wording might have consequences that ruin their day.</p> <p>Even if you know a tad about accessibility labels, you might have missed the following simple opportunity to improve your copytext.</p>"},{"location":"best-practices/copytext-accessibility/#increase-variance-in-titles","title":"Increase variance in titles","text":"<p>Product titles, service names, anything with a title: These words in your app can be the most crucial piece of information. Yet, most database models represent each name with one single string. Either this tring has a lot of details and keywords (if the SEO department won an argument), or is very short (if the UX/UI department wins).</p> <p>For image uploads, alternative text input fields are beginning to appear. For example, on Twitter, you can add a caption text for an image you upload. Added captions make images more accessible - to humans and machines alike.</p> <p>But why don't we routinely create multiple variants of a title itself? In the data model?</p> <p>If you design the software for authoring this title content, nobody holds you back from displaying some input fields more. So if something in your data (let's say, a product) has a <code>title</code> attribute, how about letting your editors add variants of this <code>title</code>, too?</p>"},{"location":"best-practices/copytext-accessibility/#three-fresh-alternative-strings-for-your-consideration","title":"Three fresh alternative strings for your consideration","text":""},{"location":"best-practices/copytext-accessibility/#1-visually-polished-alternative-text-shorttitle","title":"1. Visually polished alternative text: <code>shortTitle</code>","text":"<p>This shortened name contains a shortcut, visually improved version of the original string. If you are lucky, there is a chance to auto-generated from the original extended title.</p> <p>Go wild! Use Unicode or Emojis to shorten this version as much as possible, for example.</p> <p>Having a short version of everything allows to fit more content on viewports. It yields uncluttered list UIs that are easy to parse visually. As you have variants, you can still show the variant with higher level of detail when needed.</p>"},{"location":"best-practices/copytext-accessibility/#2-alternative-text-for-text-to-speech-ttstitle","title":"2. Alternative text for text-to-speech: <code>ttsTitle</code>","text":"<p>This alternative text variant is made for text-to-speech assistants and search. Abbreviations are forbidden. You can't control the input data, but know the domain? Let the computer produce this alternative text: by replacing the most frequently used abbreviations from your business field with written words.</p> <p>Why does this matter?</p> <p>Abbreviations like the <code>shortTitle</code> proposal above make your UI easier to parse \u2013 but only visually. They break it for voice assistant users, though: While assistants do come with built-in intelligence to produce speech with a human-sounding intonation, they lack awareness of meaning. To them, a full-stop character can look like a sentence end. Imagine a 'sentence end' intonation and spoken pause in the middle of a product name, or an actual sentence. The text won't make any sense.</p> <p>If you want to realize a search feature or make your content accessible to a search engine, non-abbreviated content works much better. You can reuse the speakable alternative text as a tooltip. This helps your seeing users to understand what your abbreviations mean.</p> <p>Including fully speakable variants of your text makes your content useful and discoverable for Google Assistant, Amazon Alexa, Microsoft Cortana, Apple Siri, and even for search engines in general.</p>"},{"location":"best-practices/copytext-accessibility/#3-plain-language-alternative-text-plainlanguagetitle","title":"3. Plain language alternative text: <code>plainLanguageTitle</code>","text":"<p>Not everybody has the same level of language comprehension.</p> <p>If you have titles describing complicated things: Do they exclude people who are no native speakers, have a learning impairment, or can't read? It can be a good idea to add a plain language variant in your data.</p> <p>Alternatively, add a review step to your content authoring workflow to ensure that your strings are understandable.</p>"},{"location":"best-practices/copytext-accessibility/#what-does-non-optimized-copytext-sound-like","title":"What does non-optimized copytext sound like?","text":"<p>Imagine you'd design a web-based, magic, but entirely realistic railway departures display.</p> <p>The HTML code could look like this:</p> <pre><code>&lt;h1&gt;King\u2019s Cross&lt;/h1&gt;\n&lt;ul&gt;\n    &lt;li&gt;Pl. 9 3/4 -&gt; Hogsmeade&lt;/li&gt;\n    &lt;li&gt;Pl. 10 -&gt; Eaglescliffe&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>Do you have a working sense of hearing? Then listen to a voice assistant reading this sign aloud. If you are near a Mac, open your Terminal app and enter this:</p> <p><code>say -v Dan \"Pl. 9 3/4 -&gt; Hogsmeade\"</code></p> <p>Then press Enter. Experience the cringy but mystifying situation of a British passenger listening to their VoiceOver assistant, which states aloud: \"Pee Ell Nine. Three Stroke Four to Hogsmeade.\" It sounds like an intriguing riddle! The pronunciation \"Platform nine three quarters to Hogsmeade\" would make more sense, however. It would assist the rider to reach the picturesque little village in time. \ud83e\uddd9\u200d\u2640\ufe0f</p> <p>With some typographic polishing and accessibility labels, we achieve a visual and auditory improvement:</p> <pre><code>&lt;h1&gt;King\u2019s Cross&lt;/h1&gt;\n&lt;ul&gt;\n    &lt;!-- Uses the `ttsTitle` field mentioned above --&gt;\n    &lt;li aria-label=\"Platform Nine and Three Quarters, to Hogsmeade\"&gt;\n        &lt;!-- Uses the `shortTitle` field mentioned above --&gt;\n        Pl. 9 3\u20444 \u2192 Hogsmeade\n    &lt;/li&gt;\n    &lt;li aria-label=\"Platform 10, to Eaglescliffe\"&gt;\n        Pl. 10 \u2192 Eaglescliffe\n    &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>Of course, the data behind this has to be entered manually. Entering text twice or three times costs a more time for each entered title. But compare this to your other UX-related efforts: This change is reasonable and straightforward, and those seconds can save the day for a user!</p> <p>By the way: A transit app developer building a real display like the one above would probably source the data from a public GTFS dataset (GTFS is the most common data format for public transit information). Did you know this data format supports text-to-speech variants of names and titles. A good idea to copy!</p> <p>For voice assistants, there is SSML, a markup language to describe how synthetic speech should sound like. A W3C task force wants to bring pronunciation features to HTML. Both markup languages even allow to fine-tune the voice's emotion.</p> <p>If voice assistants are about to play a bigger role in our daily lives, getting emotional tonality right could turn out to be a competitive advantage.</p> <p>Now is a good time to prepare for this.</p>"},{"location":"best-practices/describe-objects-not-people/","title":"Describe objects, not people","text":"<p>Here's the tl/dr. When designing accessibility-related apps or surveys,</p> <ul> <li>Describe physical, measurable properties of objects, don't assume people's abilities.</li> <li>Make the raw information searchable and displayable.</li> </ul>"},{"location":"best-practices/describe-objects-not-people/#embrace-complexity","title":"Embrace complexity","text":"<p>While building Wheelmap.org, we learned that collecting \u2018yes/no/partial\u2019 attributes is not enough to be helpful. The world is complex. Personal abilities vary.</p> <p>UX minimalism and efficiency are often cited when it comes to condensing the number of options in a UI. After all, doing so leads to better accessibility because your app gets simpler to use!</p> <p>But it shouldn\u2019t come at the cost of meaning. If you design a restaurant finder, it should feel simple and look great, but the accessibility facts you display must be accurate and not misleading. While there is a always a trade-off between high level of detail and simplicity, at least the raw data you collect should include measurable properties. Interpretation can happen later, in a separate step.</p>"},{"location":"best-practices/describe-objects-not-people/#assume-less","title":"Assume less","text":"<p>While analyzing data sets, we sometimes stumble upon data that characterizes a place as being (not) accessible for a specified target group with the best intentions. Claims include:</p> <ul> <li>\u2018the restaurant is accessible for blind people\u2019</li> <li>\u2018the station is accessible for people with mobility impairments\u2019</li> <li>\u2018the museum offers for people with learning impairments\u2019</li> </ul> <p>Superficially, these statements look helpful. But they aren\u2019t:</p> <ul> <li>People might share the same disability \u2013 but have different needs. Having a learning impairment doesn\u2019t imply that you need plain language, for example. A wheelchair users might be able to surmount one step as long as it\u2019s not too high (actually, many wheelchair users can.) Being blind doesn\u2019t mean you can read Braille. Vice-versa, offering Braille books alone doesn't imply that a library is \u2018accessible for the blind\u2019.</li> <li>A person can have more than one disability. Your UX should reflect this.</li> <li>Physical accessibility data can help non-disabled people, too.</li> <li>Obviously, you can\u2019t know everyone\u2019s abilities.</li> </ul> <p>A rule of thumb: for good data quality, leave the decision what's accessible to your users. Surveying and showing measurable, countable, observable criteria is better than trying to \u2018help\u2019 people by pre-interpreting it.</p> <p>Doing so has a pleasant side effect: It\u2019s much easier to agree on a countable measurement like \u201cthe main entrance has 2 steps\u201d than on a fuzzy term like \u201cpartially accessible.\u201d</p>"},{"location":"best-practices/rating-scales/","title":"Rating scales","text":"<p>If possible, avoid UIs that only display a rating scale and no details. While a rating scale can help ranking places, it doesn't fit the use case of matching accessibility offers and individual needs very well.</p>"},{"location":"describing-objects/0-quantities/","title":"Quantities","text":"<p>Accessibility survey data often contains unclear or aggregated definitions of quantities.</p> <p>A11yJSON represents quantities either as string or as <code>Quantity</code> object with separate properties for <code>value</code> and <code>unit</code>. Both of the following definitions are valid and have the same meaning:</p> <pre><code>{\n\"door\": {\n\"width\": \"90 cm\",\n}\n}\n</code></pre> <pre><code>{\n\"door\": {\n\"width\": {\n\"value\": 90,\n\"unit\": \"cm\"\n}\n}\n}\n</code></pre> <p>When you supply a string, any value + unit string that js-quantities supports as input is valid. Imperial or metric units, both works.</p> <p>As the data representation is SI-unit based, you can use the resulting data with any system that supports SI units:</p> <ul> <li>JavaScript: js-quantities</li> <li>C++: Boost Units</li> <li>Java: Unit API</li> <li>Python: Pint and   uncertainties</li> <li>Rust: uom crate</li> <li>Swift: Quantities package</li> </ul> <p>Besides <code>value</code> and <code>unit</code>, you can save the original data value as string representation as <code>rawValue</code> to debug conversion errors. When saving quantities, you have to specify them including their unit. You can provide measures as fixed quantities, but also with constraints and variance (uwing the <code>accuracy</code> field). This helps</p> <ul> <li>when the measurement method is imprecise</li> <li>when a person guesses a length, e.g., the width of a door</li> <li>when you want to transform a averaged measurements of more than one object</li> <li>when you derive the data from a catalog of criteria (e.g. when the original source states that all collected wheelchair-accessible entrance doors were more than 90cm wide, and only stores a boolean variable for this)</li> </ul>"},{"location":"describing-objects/constants/","title":"Constants","text":"<p>Besides interfaces and bare types, A11yJSON defines the following constants.</p> <p>Some lack proper formatting in the documentation. Fixes in <code>tools/generate-overview.ts</code> are welcome!</p>"},{"location":"describing-objects/constants/#accelerationschema","title":"AccelerationSchema","text":"<p><code>SimpleSchema</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#accelerationschemadefinition","title":"AccelerationSchemaDefinition","text":"<p>Validates a acceleration quantity object and will only accept acceleration units, eg. meter/second^2, miles/hour^2. Useful to describe the acceleration of a vehicle, or the acceleration that a person is subjected to.</p> <p><code>SchemaDefinition</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#accesstypes","title":"AccessTypes","text":"<p>Read-only tuple with 15 strings:</p> <ul> <li><code>private</code></li> <li><code>public</code></li> <li><code>customers</code></li> <li><code>permissive</code></li> <li><code>yes</code></li> <li><code>no</code></li> <li><code>permit</code></li> <li><code>designated</code></li> <li><code>delivery</code></li> <li><code>emergency</code></li> <li><code>residents</code></li> <li><code>employees</code></li> <li><code>disabled</code></li> <li><code>yes</code></li> <li><code>no</code></li> </ul>"},{"location":"describing-objects/constants/#basequantityschema","title":"BaseQuantitySchema","text":"<p><code>SimpleSchema</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#brightnessschema","title":"BrightnessSchema","text":"<p><code>SimpleSchema</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#brightnessschemadefinition","title":"BrightnessSchemaDefinition","text":"<p>Validates a brightness descriptor and will only accept brightness units, eg. nits or lumens.</p> <p><code>SchemaDefinition</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#deskinteractions","title":"DeskInteractions","text":"<p>Read-only tuple with 20 strings:</p> <ul> <li><code>changeHeight</code></li> <li><code>savePreset</code></li> <li><code>enqueue</code></li> <li><code>checkIn</code></li> <li><code>checkOut</code></li> <li><code>ringBell</code></li> <li><code>pay</code></li> <li><code>handoverLuggage</code></li> <li><code>handover</code></li> <li><code>getReturn</code></li> <li><code>getFood</code></li> <li><code>getShoppingBag</code></li> <li><code>scan</code></li> <li><code>selfCheckout</code></li> <li><code>open</code></li> <li><code>close</code></li> <li><code>unlock</code></li> <li><code>lock</code></li> <li><code>unlockAndLock</code></li> <li><code>openAndClose</code></li> </ul>"},{"location":"describing-objects/constants/#directionaxes","title":"DirectionAxes","text":"<p>Describes a physical direction axis relative to a person\u2019s body.</p> <p>Read-only tuple with 3 strings:</p> <ul> <li><code>sagittal</code></li> <li><code>coronal</code></li> <li><code>axial</code></li> </ul>"},{"location":"describing-objects/constants/#directions","title":"Directions","text":"<p>Describes physical directions, from the perspective of a person facing forward.</p> <p>Read-only tuple with 8 strings:</p> <ul> <li><code>up</code></li> <li><code>down</code></li> <li><code>left</code></li> <li><code>right</code></li> <li><code>forward</code></li> <li><code>backward</code></li> <li><code>clockwise</code></li> <li><code>counterclockwise</code></li> </ul>"},{"location":"describing-objects/constants/#doorinteractions","title":"DoorInteractions","text":"<p>Read-only tuple with 7 strings:</p> <ul> <li><code>ringDoorbell</code></li> <li><code>open</code></li> <li><code>close</code></li> <li><code>unlock</code></li> <li><code>lock</code></li> <li><code>unlockAndLock</code></li> <li><code>openAndClose</code></li> </ul>"},{"location":"describing-objects/constants/#equipmentinteractions","title":"EquipmentInteractions","text":"<p>Read-only tuple with 20 strings:</p> <ul> <li><code>use</code></li> <li><code>selectFloor</code></li> <li><code>arriveAtFloor</code></li> <li><code>callEmergency</code></li> <li><code>ride</code></li> <li><code>travel</code></li> <li><code>buy</code></li> <li><code>sell</code></li> <li><code>call</code></li> <li><code>understand</code></li> <li><code>sleep</code></li> <li><code>toggle</code></li> <li><code>engage</code></li> <li><code>flush</code></li> <li><code>scan</code></li> <li><code>handover</code></li> <li><code>enable</code></li> <li><code>disable</code></li> <li><code>locateYourself</code></li> <li><code>findYourDestination</code></li> </ul>"},{"location":"describing-objects/constants/#equipmenttypes","title":"EquipmentTypes","text":"<p>Read-only tuple with 16 strings:</p> <ul> <li><code>bed</code></li> <li><code>wardrobe</code></li> <li><code>elevator</code></li> <li><code>escalator</code></li> <li><code>movingWalkway</code></li> <li><code>ramp</code></li> <li><code>hoist</code></li> <li><code>stairLift</code></li> <li><code>switch</code></li> <li><code>sitemap</code></li> <li><code>vendingMachine</code></li> <li><code>intercom</code></li> <li><code>powerOutlet</code></li> <li><code>flushMechanism</code></li> <li><code>bodyScanner</code></li> <li><code>luggageScanner</code></li> </ul>"},{"location":"describing-objects/constants/#forceschema","title":"ForceSchema","text":"<p><code>SimpleSchema</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#forceschemadefinition","title":"ForceSchemaDefinition","text":"<p>Validates a force quantity object and will only accept force units, eg. newton, or kilogram*meter/second^2.</p> <p><code>SchemaDefinition</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#genericinteractions","title":"GenericInteractions","text":"<p>Read-only tuple with 24 strings:</p> <ul> <li><code>watchMovies</code></li> <li><code>watchPlays</code></li> <li><code>explore</code></li> <li><code>visit</code></li> <li><code>roam</code></li> <li><code>read</code></li> <li><code>rent</code></li> <li><code>watch</code></li> <li><code>see</code></li> <li><code>listen</code></li> <li><code>getFood</code></li> <li><code>eat</code></li> <li><code>pay</code></li> <li><code>buy</code></li> <li><code>sell</code></li> <li><code>workHere</code></li> <li><code>arrive</code></li> <li><code>checkIn</code></li> <li><code>checkOut</code></li> <li><code>useLockers</code></li> <li><code>change</code></li> <li><code>use</code></li> <li><code>book</code></li> <li><code>play</code></li> </ul>"},{"location":"describing-objects/constants/#grabbarsinteractions","title":"GrabBarsInteractions","text":"<p>Read-only tuple with 2 strings:</p> <ul> <li><code>localizeYourself</code></li> <li><code>findYourDestination</code></li> </ul>"},{"location":"describing-objects/constants/#hertzschema","title":"HertzSchema","text":"<p><code>SimpleSchema</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#hertzschemadefinition","title":"HertzSchemaDefinition","text":"<p>Validates a frequency quantity object and will only accept frequency units, eg. hertz.</p> <p><code>SchemaDefinition</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#intercominteractions","title":"IntercomInteractions","text":"<p>Read-only tuple with 6 strings:</p> <ul> <li><code>ring</code></li> <li><code>call</code></li> <li><code>hangUp</code></li> <li><code>open</code></li> <li><code>close</code></li> <li><code>identify</code></li> </ul>"},{"location":"describing-objects/constants/#lengthschema","title":"LengthSchema","text":"<p><code>SimpleSchema</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#lengthschemadefinition","title":"LengthSchemaDefinition","text":"<p>Validates a length quantity object and will only accept length units, eg. meter, centimeter or inch.</p> <p><code>SchemaDefinition</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#massschema","title":"MassSchema","text":"<p><code>SimpleSchema</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#massschemadefinition","title":"MassSchemaDefinition","text":"<p>Validates a mass quantity object and will only accept mass/weight units, eg. kilogram, gram or pound.</p> <p><code>SchemaDefinition</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#mediainteractions","title":"MediaInteractions","text":"<p>Read-only tuple with 11 strings:</p> <ul> <li><code>watch</code></li> <li><code>listen</code></li> <li><code>feel</code></li> <li><code>discover</code></li> <li><code>open</code></li> <li><code>close</code></li> <li><code>rent</code></li> <li><code>recognize</code></li> <li><code>browse</code></li> <li><code>read</code></li> <li><code>interact</code></li> </ul>"},{"location":"describing-objects/constants/#mediatypes","title":"MediaTypes","text":"<p>Read-only tuple with 10 strings:</p> <ul> <li><code>document</code></li> <li><code>menu</code></li> <li><code>guide</code></li> <li><code>tour</code></li> <li><code>presentation</code></li> <li><code>exhibit</code></li> <li><code>movie</code></li> <li><code>play</code></li> <li><code>screen</code></li> <li><code>website</code></li> </ul>"},{"location":"describing-objects/constants/#mirrorinteractions","title":"MirrorInteractions","text":"<p>Read-only tuple with 5 strings:</p> <ul> <li><code>turn</code></li> <li><code>adjust</code></li> <li><code>move</code></li> <li><code>clean</code></li> <li><code>use</code></li> </ul>"},{"location":"describing-objects/constants/#operators","title":"Operators","text":"<p>The allowed operators for comparison quantities</p> <p>Read-only tuple with 9 strings:</p> <ul> <li><code>&lt;</code></li> <li><code>&lt;=</code></li> <li><code>==</code></li> <li><code>&gt;=</code></li> <li><code>&gt;</code></li> <li><code>=</code></li> <li><code>~</code></li> <li><code>~=</code></li> <li><code>!=</code></li> </ul>"},{"location":"describing-objects/constants/#parkinginteractions","title":"ParkingInteractions","text":"<p>Read-only tuple with 4 strings:</p> <ul> <li><code>park</code></li> <li><code>enterVehicle</code></li> <li><code>exitVehicle</code></li> <li><code>arrive</code></li> </ul>"},{"location":"describing-objects/constants/#paymentinteractions","title":"PaymentInteractions","text":"<p>Read-only tuple with 5 strings:</p> <ul> <li><code>pay</code></li> <li><code>checkIn</code></li> <li><code>logIn</code></li> <li><code>logOut</code></li> <li><code>register</code></li> </ul>"},{"location":"describing-objects/constants/#queuesysteminteractions","title":"QueueSystemInteractions","text":"<p>Read-only tuple with 9 strings:</p> <ul> <li><code>enqueue</code></li> <li><code>skipQueue</code></li> <li><code>wait</code></li> <li><code>leaveQueue</code></li> <li><code>arrive</code></li> <li><code>checkIn</code></li> <li><code>checkOut</code></li> <li><code>getTicket</code></li> <li><code>getOnesTurn</code></li> </ul>"},{"location":"describing-objects/constants/#restroomsignicons","title":"RestroomSignIcons","text":"<p>Read-only tuple with 10 strings:</p> <ul> <li><code>allGender</code></li> <li><code>female</code></li> <li><code>male</code></li> <li><code>personInWheelchair</code></li> <li><code>changingTable</code></li> <li><code>baby</code></li> <li><code>family</code></li> <li><code>urinal</code></li> <li><code>washBasin</code></li> <li><code>toiletBowl</code></li> </ul>"},{"location":"describing-objects/constants/#roominteractions","title":"RoomInteractions","text":"<p>Read-only tuple with 12 strings:</p> <ul> <li><code>enter</code></li> <li><code>exit</code></li> <li><code>stand</code></li> <li><code>sit</code></li> <li><code>see</code></li> <li><code>sleep</code></li> <li><code>play</code></li> <li><code>wait</code></li> <li><code>storeThings</code></li> <li><code>lookAround</code></li> <li><code>openWindow</code></li> <li><code>closeWindow</code></li> </ul>"},{"location":"describing-objects/constants/#seatinteractions","title":"SeatInteractions","text":"<p>Read-only tuple with 21 strings:</p> <ul> <li><code>sit</code></li> <li><code>fold</code></li> <li><code>unfold</code></li> <li><code>move</code></li> <li><code>adjust</code></li> <li><code>adjustHeight</code></li> <li><code>adjustSeatingSurface</code></li> <li><code>adjustSeatingAngle</code></li> <li><code>adjustArmRests</code></li> <li><code>adjustHeadRest</code></li> <li><code>adjustLegRest</code></li> <li><code>adjustBackRest</code></li> <li><code>adjustFootRest</code></li> <li><code>adjustSeatBelt</code></li> <li><code>adjustSeatBeltLength</code></li> <li><code>adjustSeatBeltHeight</code></li> <li><code>adjustSeatBeltAngle</code></li> <li><code>adjustSeatBeltPosition</code></li> <li><code>adjustSeatBeltTension</code></li> <li><code>adjustSeatBeltLock</code></li> <li><code>connectSeatbelt</code></li> </ul>"},{"location":"describing-objects/constants/#showerinteractions","title":"ShowerInteractions","text":"<p>Read-only tuple with 9 strings:</p> <ul> <li><code>transfer</code></li> <li><code>wash</code></li> <li><code>useShampoo</code></li> <li><code>useShowerGel</code></li> <li><code>useSoap</code></li> <li><code>useConditioner</code></li> <li><code>useShowerCurtain</code></li> <li><code>useShowerHead</code></li> <li><code>useSupport</code></li> </ul>"},{"location":"describing-objects/constants/#signageinteractions","title":"SignageInteractions","text":"<p>Read-only tuple with 3 strings:</p> <ul> <li><code>locateYourself</code></li> <li><code>findYourDestination</code></li> <li><code>useSitemap</code></li> </ul>"},{"location":"describing-objects/constants/#slopeschema","title":"SlopeSchema","text":"<p><code>SimpleSchema</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#slopeschemadefinition","title":"SlopeSchemaDefinition","text":"<p>Validates a slope quantity object and will only accept units to descrie a slope, eg. degrees.</p> <p><code>SchemaDefinition</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#smoothnesstypevalues","title":"SmoothnessTypeValues","text":"<p>Read-only tuple with 9 strings:</p> <ul> <li><code>excellent</code></li> <li><code>good</code></li> <li><code>intermediate</code></li> <li><code>bad</code></li> <li><code>horrible</code></li> <li><code>impassable</code></li> <li><code>very_bad</code></li> <li><code>very_horrible</code></li> <li><code>very_good</code></li> </ul>"},{"location":"describing-objects/constants/#speedschema","title":"SpeedSchema","text":"<p><code>SimpleSchema</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#speedschemadefinition","title":"SpeedSchemaDefinition","text":"<p>Validates a speed quantity object and will only accept speed units, eg. meter/second, miles/hour or similar.</p> <p><code>SchemaDefinition</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#surfacetypevalues","title":"SurfaceTypeValues","text":"<p>Read-only tuple with 158 strings:</p> <ul> <li><code>acrylic</code></li> <li><code>aluminium</code></li> <li><code>anti-slip</code></li> <li><code>artificial</code></li> <li><code>artificial_grass</code></li> <li><code>artificial_turf</code></li> <li><code>asfalto</code></li> <li><code>ash</code></li> <li><code>asphalt</code></li> <li><code>astroturf</code></li> <li><code>bamboo</code></li> <li><code>bare_rock</code></li> <li><code>bark</code></li> <li><code>barkchips</code></li> <li><code>bedrock</code></li> <li><code>bitumen</code></li> <li><code>bituminous</code></li> <li><code>block</code></li> <li><code>boardwalk</code></li> <li><code>boulders</code></li> <li><code>brick</code></li> <li><code>brick_weave</code></li> <li><code>bricks</code></li> <li><code>bushes</code></li> <li><code>carpet</code></li> <li><code>cement</code></li> <li><code>chalk</code></li> <li><code>chipseal</code></li> <li><code>cinder</code></li> <li><code>clay</code></li> <li><code>cobblestone</code></li> <li><code>compacted</code></li> <li><code>compacted_gravel</code></li> <li><code>composite</code></li> <li><code>con</code></li> <li><code>concrete</code></li> <li><code>concrete_slab</code></li> <li><code>concrete_slabs</code></li> <li><code>construction</code></li> <li><code>coral</code></li> <li><code>coral_sand</code></li> <li><code>crushed_limestone</code></li> <li><code>crushed_shells</code></li> <li><code>debris</code></li> <li><code>decoturf</code></li> <li><code>dirt</code></li> <li><code>earth</code></li> <li><code>enrob\u00e9</code></li> <li><code>fine_gravel</code></li> <li><code>fine_sand</code></li> <li><code>flagstone</code></li> <li><code>footway</code></li> <li><code>glass</code></li> <li><code>goudron</code></li> <li><code>granite</code></li> <li><code>grass</code></li> <li><code>grass_paver</code></li> <li><code>grass_scrub</code></li> <li><code>grassland</code></li> <li><code>grating</code></li> <li><code>gravel</code></li> <li><code>green</code></li> <li><code>grit</code></li> <li><code>ground</code></li> <li><code>hardcore</code></li> <li><code>ice</code></li> <li><code>ice_road</code></li> <li><code>interlock</code></li> <li><code>iron</code></li> <li><code>laterite</code></li> <li><code>lawn</code></li> <li><code>leaves</code></li> <li><code>limerock</code></li> <li><code>limestone</code></li> <li><code>linoleum</code></li> <li><code>loose_gravel</code></li> <li><code>marble</code></li> <li><code>marble_plate</code></li> <li><code>meadow</code></li> <li><code>metal</code></li> <li><code>metal_grid</code></li> <li><code>mixed</code></li> <li><code>moss</code></li> <li><code>mud</code></li> <li><code>mulch</code></li> <li><code>native</code></li> <li><code>natural</code></li> <li><code>none</code></li> <li><code>oil</code></li> <li><code>overgrown</code></li> <li><code>path</code></li> <li><code>paved</code></li> <li><code>pavement</code></li> <li><code>paving</code></li> <li><code>paving_stone</code></li> <li><code>paving_stones</code></li> <li><code>peat</code></li> <li><code>pebbles</code></li> <li><code>pebblestone</code></li> <li><code>plank</code></li> <li><code>plastic</code></li> <li><code>plates</code></li> <li><code>rasin</code></li> <li><code>residential</code></li> <li><code>rock</code></li> <li><code>rocks</code></li> <li><code>rocky</code></li> <li><code>roman_paving</code></li> <li><code>rubber</code></li> <li><code>rubbercrumb</code></li> <li><code>rubble</code></li> <li><code>salt</code></li> <li><code>sand</code></li> <li><code>sandstone</code></li> <li><code>sawdust</code></li> <li><code>scree</code></li> <li><code>scrub</code></li> <li><code>sealed</code></li> <li><code>sett</code></li> <li><code>shell</code></li> <li><code>shells</code></li> <li><code>shingle</code></li> <li><code>slabs</code></li> <li><code>snow</code></li> <li><code>soil</code></li> <li><code>spur</code></li> <li><code>steel</code></li> <li><code>stepping_stones</code></li> <li><code>stone</code></li> <li><code>stones</code></li> <li><code>synthetic</code></li> <li><code>tactile_paving</code></li> <li><code>tar</code></li> <li><code>tared</code></li> <li><code>tarmac</code></li> <li><code>tartan</code></li> <li><code>terra</code></li> <li><code>terre</code></li> <li><code>tile</code></li> <li><code>tiles</code></li> <li><code>timber</code></li> <li><code>track</code></li> <li><code>trail</code></li> <li><code>trees</code></li> <li><code>tuff</code></li> <li><code>turf</code></li> <li><code>undefined</code></li> <li><code>unhewn_cobblestone</code></li> <li><code>unpaved</code></li> <li><code>unpaved2</code></li> <li><code>unpaved33</code></li> <li><code>unpaved_minor</code></li> <li><code>unsealed</code></li> <li><code>water</code></li> <li><code>wood</code></li> <li><code>wood_chips</code></li> <li><code>woodchips</code></li> <li><code>zebra</code></li> </ul>"},{"location":"describing-objects/constants/#temperatureschema","title":"TemperatureSchema","text":"<p><code>SimpleSchema</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#temperatureschemadefinition","title":"TemperatureSchemaDefinition","text":"<p>Validates a temperature quantity object and will only accept temperature units, eg. degrees celsius (<code>degC</code>), degrees Fahrenheit (<code>degF</code>) or kelvin (<code>K</code>).</p> <p><code>SchemaDefinition</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#timeintervalschema","title":"TimeIntervalSchema","text":"<p><code>SimpleSchema</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#timeintervalschemadefinition","title":"TimeIntervalSchemaDefinition","text":"<p>Validates a timer interval object and will only accept time units, eg. seconds, minutes or hours.</p> <p><code>SchemaDefinition</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#toiletinteractions","title":"ToiletInteractions","text":"<p>Read-only tuple with 4 strings:</p> <ul> <li><code>use</code></li> <li><code>flush</code></li> <li><code>secondaryFlush</code></li> <li><code>spray</code></li> </ul>"},{"location":"describing-objects/constants/#unitlessschema","title":"UnitlessSchema","text":"<p><code>SimpleSchema</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#unitlessschemadefinition","title":"UnitlessSchemaDefinition","text":"<p><code>SchemaDefinition</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#urgencies","title":"Urgencies","text":"<p>Read-only tuple with 5 strings:</p> <ul> <li><code>alert</code></li> <li><code>alarm</code></li> <li><code>warning</code></li> <li><code>info</code></li> <li><code>debug</code></li> </ul>"},{"location":"describing-objects/constants/#volumeschema","title":"VolumeSchema","text":"<p><code>SimpleSchema</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#volumeschemadefinition","title":"VolumeSchemaDefinition","text":"<p>Validates a sound volume quantity object and will only accept sound volume units, eg. decibel.</p> <p><code>SchemaDefinition</code> from the <code>simpl-schema</code> NPM package.</p>"},{"location":"describing-objects/constants/#washbashininteractions","title":"WashBashinInteractions","text":"<p>Read-only tuple with 13 strings:</p> <ul> <li><code>changeTemperature</code></li> <li><code>changeWaterPressure</code></li> <li><code>useWater</code></li> <li><code>getHotWater</code></li> <li><code>getColdWater</code></li> <li><code>getCarbonizedWater</code></li> <li><code>useWaterJet</code></li> <li><code>useWaterSpray</code></li> <li><code>useSoap</code></li> <li><code>getTowel</code></li> <li><code>getPaperTowel</code></li> <li><code>useAirDryer</code></li> <li><code>sanitizeHands</code></li> </ul>"},{"location":"describing-objects/constants/#wheelchairaccessibilitygrades","title":"WheelchairAccessibilityGrades","text":"<p>Describes the general wheelchair accessibility of the place. This is a human-rated value. It SHOULD conform to the traffic light system found in OpenStreetMap and Wheelmap.org.</p> <p>Read-only tuple with 3 strings:</p> <ul> <li><code>fully</code></li> <li><code>partially</code></li> <li><code>not</code></li> </ul>"},{"location":"describing-objects/constants/#wifiinteractions","title":"WifiInteractions","text":"<p>Read-only tuple with 6 strings:</p> <ul> <li><code>login</code></li> <li><code>register</code></li> <li><code>getPassword</code></li> <li><code>getGuestPass</code></li> <li><code>getTerms</code></li> <li><code>acceptTerms</code></li> </ul>"},{"location":"describing-objects/interfaces/","title":"Interfaces","text":"<p>This is a list of data structures that A11yJSON specifies.</p> <p>They are meant to be interfaces in the software development sense: This means you can either use them as they are, or mix them into your own entity definitions.</p>"},{"location":"describing-objects/interfaces/#accessibility","title":"Accessibility","text":"<p>Describes the physical (and sometimes human rated) accessibility of a place.</p> NameTypeaccessibleWithPersonalProfileambientNoiseLevelVolume<p>Ambient noise level in dB(A) relative to a reference pressure of 0.00002 Pa. Median over a 10-second period at least.</p> animalPolicyAnimalPolicy<p>Object describing the owner's policy regarding visitors bringing animals with them.</p> desks<code>undefined</code>\u00a0|\u00a0Desk[]<p>Describes the accessibility of desks in the place. <code>null</code> indicates there are no desks, <code>undefined</code> or missing property indicates unknown.</p> entrances<code>undefined</code>\u00a0|\u00a0Entrance[]<p>Describes the accessibility of entrances to the place.</p> hasAirConditioning<code>boolean</code><p>Determines if there is air conditioning installed and actively used.</p> hasBrailleSignage<code>boolean</code><p><code>true</code> if there is braille navigation for/to this place, <code>false</code> if not.</p> hasInductionLoop<code>boolean</code><p><code>true</code> if the venue has induction loops installed in its functional units where this is relevant.</p> hasSoundAbsorption<code>boolean</code><p>Determines if there is sound absorption installed.</p> hasTactileGuideStrips<code>boolean</code><p><code>true</code> if the venue has tactile guide strips on the floor or at the walls, <code>false</code> if not. <code>undefined</code> or missing property indicates unknown.</p> hasTactileSignage<code>boolean</code><p><code>true</code> if there is tactile navigation for/to this place, <code>false</code> if not.</p> interactions Object with one or more of these keys:  <p> <code>arrive</code> <code>book</code> <code>buy</code> <code>change</code> <code>checkIn</code> <code>checkOut</code> <code>eat</code> <code>explore</code> <code>getFood</code> <code>listen</code> <code>pay</code> <code>play</code> <code>read</code> <code>rent</code> <code>roam</code> <code>see</code> <code>sell</code> <code>use</code> <code>useLockers</code> <code>visit</code> <code>watch</code> <code>watchMovies</code> <code>watchPlays</code> <code>workHere</code> </p>  Values must be of type InteractionMode. <p>An object that indicates how the object can be interacted with.</p> <p>The keys of this object are the interaction types, and the values are InteractionMode objects.</p> isQuiet<code>boolean</code><p>Determines if the venue is quiet (subjectively, by the assessor). If possible, use the <code>ambientNoiseLevel</code> property instead.</p> isWellLit<code>boolean</code><p>Determines if the venue is well lit (subjectively, by the assessor).  Will be replaced by a measurable lumen value in the future.</p> media<code>undefined</code>\u00a0|\u00a0Media[]<p>Information about media. <code>null</code> indicates there is no media, <code>undefined</code> or missing property indicates unknown.</p> offersActivitiesForPeopleWithPersonalProfileparking<code>undefined</code>\u00a0|\u00a0Parking<p>Information about parking facilities at/around the venue. <code>null</code> indicates there is no parking, <code>undefined</code> or missing property indicates unknown.</p> partiallyAccessibleWithPersonalProfilepathways<code>undefined</code>\u00a0|\u00a0Pathways<p>Describes the accessibility of pathways to the place or inside the place\u2019s boundaries (mixed)</p> pathwaysFromEntrance<code>undefined</code>\u00a0|\u00a0Pathways<p>For places inside other places (e.g. a room inside a building).</p> <p>Describes the accessibility of pathways to the place. If an extra accessible entrance exists, describe pathways from there to this place.</p> pathwaysInside<code>undefined</code>\u00a0|\u00a0Pathways<p>Describes the accessibility of pathways to the place or inside the place\u2019s boundaries (mixed)</p> payment<code>undefined</code>\u00a0|\u00a0Payment<p>Information about payment at the place. <code>null</code> indicates there is no payment possible/required, <code>undefined</code> or missing property indicates unknown.</p> restrooms<code>undefined</code>\u00a0|\u00a0Restroom[]<p>Describes the accessibility of restrooms in the place.</p> serviceContactLocalizedStringsignageSystemsSignage[]<p>Describes local signage systems. If multiple different systems are used, describe them all.</p> smokingPolicySmokingPolicy<p>Object describing the owner's smoking policy.</p> staff<code>undefined</code>\u00a0|\u00a0Staff<p>Information about the service staff. <code>null</code> indicates there is no staff, <code>undefined</code> or missing property indicates unknown.</p> surface<code>undefined</code>\u00a0|\u00a0Surface<p>Object describing the place's ground condition. If there are very different ground conditions, you can create multiple places and nest them.</p> tables<code>undefined</code>\u00a0|\u00a0Desk[]<p>Information about tables (for example in a restaurant). <code>null</code> indicates there are no tables, <code>undefined</code> or missing property indicates unknown.</p> wheelchairAccessibilityGradeOne of the following strings:  <p> <code>fully</code> <code>not</code> <code>partially</code> </p> <p>Describes the general wheelchair accessibility of the place. This is a human-rated value.</p> wheelchairPlaces<code>undefined</code>\u00a0|\u00a0WheelchairPlaces<p>Information about wheelchair places. <code>null</code> indicates there are no places, <code>undefined</code> or missing property indicates unknown.</p> wifiWifiAccessibility<p>Describes the Wifi availability and accessibility at the place.</p>"},{"location":"describing-objects/interfaces/#actionmode","title":"ActionMode","text":"<p>Describes necessary abilities and modes inputting information.</p> NameTypeaccessArray of one or more of these strings:  <p> <code>customers</code> <code>delivery</code> <code>designated</code> <code>disabled</code> <code>emergency</code> <code>employees</code> <code>no</code> <code>permissive</code> <code>permit</code> <code>private</code> <code>public</code> <code>residents</code> <code>yes</code> </p> <p>Who has access to this action?</p> activationForceForce<p>Force needed for the described input method.</p> activationTimeIntervalTimeInterval<p>Time interval needed for activation/engagement.</p> apiDocumentationUrlLocalizedString<p>The input API documentation URL.</p> attentionSpanTimeInterval<p>Attention time needed for activation/engagement.</p> bodyHeightLength<p>A supported body height.</p> bodyMassMass<p>A supported body weight.</p> brailleKeyboard<code>boolean</code><p>The ability to write textual content with a braille keyboard is supported or needed.</p> brailleText<code>boolean</code><p>The ability to read braille is supported or needed.</p> burnHazard<code>boolean</code><p>There is a burn hazard.</p> cable<code>boolean</code><p>A cable is supported or needed.</p> capacitive<code>boolean</code><p>The action uses a capacity sensor, for example a touch sensor.</p> clap<code>boolean</code><p>Clapping your hands is supported or needed.</p> click<code>boolean</code><p>The ability to click a button with a finger is supported or needed.</p> descriptionLocalizedString<p>Describes the output as human-readable text.</p> directionOne of the following strings:  <p> <code>backward</code> <code>clockwise</code> <code>counterclockwise</code> <code>down</code> <code>forward</code> <code>left</code> <code>right</code> <code>up</code> </p> <p>The direction of the action, relative to the body.</p> directionAxisOne of the following strings:  <p> <code>axial</code> <code>coronal</code> <code>sagittal</code> </p> <p>The direction axis of the action, relative to the body.</p> doubleClick<code>boolean</code><p>The ability to click a button with a finger is supported or needed.</p> drag<code>boolean</code><p>The ability to drag an object is supported or needed.</p> dragAndDropGesture<code>boolean</code><p>The ability to do a virtual drag-and-drop finger/mouse gesture is supported or needed.</p> educationLevelNumber<p>Education level needed to understand the action.</p> <p>http://www.ibe.unesco.org/en/glossary-curriculum-terminology/l/levels-education</p> <ul> <li>early childhood education (level 0)</li> <li>primary education (level 1)</li> <li>lower secondary education (level 2)</li> <li>upper secondary education (level 3)</li> <li>postsecondary non-tertiary education (level 4)</li> <li>short-cycle tertiary education (level 5)</li> <li>bachelor\u2019s or equivalent level (level 6)</li> <li>master\u2019s or equivalent level (level 7)</li> <li>doctor or equivalent level (level 8).</li> </ul> eyeTracker<code>boolean</code><p>The ability to use an eye tracker is supported or needed.</p> faceRecognition<code>boolean</code><p>The input uses face recognition.</p> feedbackPerceptionMode<p>How is feedback given for an input?</p> fingerprintScan<code>boolean</code><p>The input uses a fingerprint scanner.</p> handwriting<code>boolean</code><p>The ability to write textual content by hand is supported or needed.</p> haptic<code>boolean</code><p>Haptic input is supported or needed.</p> headPointer<code>boolean</code><p>The ability to use a head pointer is supported or needed.</p> headphone<code>boolean</code><p>Headphones are supported or needed.</p> highContrast<code>boolean</code><p>The input has high contrast elements, for example around buttons.</p> instructionsUrlLocalizedString<p>URL describing how to use the input mechanism.</p> irisScan<code>boolean</code><p>The input uses an iris scanner.</p> isEasyToFind<code>boolean</code><p><code>true</code> if the item is easy to find, <code>false</code> if people might face difficulties trying to find the item, or <code>undefined</code> if this is unknown or irrelevant.</p> isEasyToUnderstand<code>boolean</code><p><code>true</code> if the input is easy to understand, <code>false</code> if people might face difficulties trying to understand how the input works, or <code>undefined</code> if this is unknown or irrelevant.</p> joystick<code>boolean</code><p>The ability to use a joystick is supported or needed.</p> keyboard<code>boolean</code><p>The ability to write textual content by typing on a keyboard is supported or needed.</p> keypad<code>boolean</code><p>The ability to write numbers by typing on a keypad is supported or needed.</p> knob<code>boolean</code><p>The action uses a knob.</p> knurled<code>boolean</code><p>The input has a knurled surface, for example around buttons.</p> languages<code>string</code>[]<p>Input languages supported.</p> leftHanded<code>boolean</code><p>You can or must give input with your left hand.</p> lick<code>boolean</code><p>The ability to lick an object with your tongue is supported or needed (e.g. a lollipop)</p> morseCode<code>boolean</code><p>Morse code input is supported or needed.</p> mouse<code>boolean</code><p>The ability to use a mouse is supported or needed.</p> move<code>boolean</code><p>The ability to move an object is supported or needed.</p> nameLocalizedString<p>Describes which output is meant. Helpful if there are multiple outputs.</p> necessaryClimbHeightLength<p>Height you need to be able to climb over (for obstacles)</p> necessaryEyeHeightLength<p>How tall do you have to be to perceive the content/output/signal.</p> necessaryGripHeightLength<p>The height you need to grip to perceive the content/output/signal.</p> optional<code>boolean</code><p><code>true</code> if the action is optional, <code>false</code> if it is required.</p> paper<code>boolean</code><p>Handling paper is supported or needed.</p> pedal<code>boolean</code><p>The ability to use a pedal is supported or needed.</p> photo<code>boolean</code><p>The input makes a photo.</p> pinch<code>boolean</code><p>The ability to pinch an object is supported or needed.</p> pinchFingerGesture<code>boolean</code><p>The ability to use a pinch finger gesture is supported or needed.</p> press<code>boolean</code><p>The ability to apply force to an object is supported or needed.</p> pullSwitch<code>boolean</code><p>The ability to use a pull switch is supported or needed.</p> pullstring<code>boolean</code><p>The ability to use a pullstring is supported or needed.</p> pushButton<code>boolean</code><p>The ability to use a push button is supported or needed.</p> pushSwitch<code>boolean</code><p>The ability to use a push switch is supported or needed.</p> qrCode<code>boolean</code><p>A QR code is supported or needed.</p> raisedText<code>boolean</code><p><code>true</code> if the controls or signs have raised letters, <code>false</code> if not.</p> required<code>boolean</code><p><code>false</code> if the action is optional, <code>true</code> if it is required.</p> rhythm<code>boolean</code><p>The ability to use rhythm input is supported or needed.</p> rightHanded<code>boolean</code><p>You can or must give input with your right hand.</p> rotate<code>boolean</code><p>The ability to rotate an object is supported or needed.</p> rotateTwoFingersGesture<code>boolean</code><p>The ability to use a two-finger rotation gesture is supported or needed.</p> scratch<code>boolean</code><p>The ability to scratch is supported or needed.</p> screen<code>boolean</code><p>A screen is supported or needed.</p> signLanguage<code>boolean</code><p>The ability to use sign language is supported or needed.</p> singleHanded<code>boolean</code><p>You can or must give input with one hand.</p> sipAndPuff<code>boolean</code><p>The ability to use a sip and puff switch is supported or needed.</p> smell<code>boolean</code><p>The ability to smell is supported or needed.</p> soundRecording<code>boolean</code><p>The input makes a sound recording.</p> speak<code>boolean</code><p>The ability to speak is supported or needed.</p> squeeze<code>boolean</code><p>The ability to squeeze an object is supported or needed.</p> stateCount<code>number</code><p>State count for a button or switch, for example 2 for a toggle button, 3 for a 3-way button.</p> swipeFingerGesture<code>boolean</code><p>The ability to use a swipe finger gesture is supported or needed.</p> swipeThreeFingersGesture<code>boolean</code><p>The ability to use a three-finger swipe gesture is supported or needed.</p> swipeTwoFingersGesture<code>boolean</code><p>The ability to use a three-finger swipe gesture is supported or needed.</p> tactile<code>boolean</code><p>Tactile input is supported or needed.</p> tactileGuides<code>boolean</code><p>The input has tactile guides, for example around buttons.</p> tap<code>boolean</code><p>The ability to tap an element with a finger is supported or needed.</p> tearApart<code>boolean</code><p>The ability to tear something apart is supported or needed.</p> techSufficientTechCombination[]<p>Technology combinations that are sufficient to make use of the output.</p> techSupportedTechCombination[]<p>Technologies that are sufficient to make use of the output.</p> tilt<code>boolean</code><p>The ability to tilt an object is supported or needed.</p> tongue<code>boolean</code><p>The ability to move an object with your tongue is supported or needed.</p> touch<code>boolean</code><p>Touch input is supported or needed.</p> touchscreen<code>boolean</code><p>Touchscreen input is supported or needed.</p> trackball<code>boolean</code><p>The ability to use a trackball is supported or needed.</p> tripleClick<code>boolean</code><p>The ability to click a button with a finger is supported or needed.</p> turn<code>boolean</code><p>The ability to turn an object is supported or needed.</p> turnKnob<code>boolean</code><p>The ability to turn a knob is supported or needed.</p> twoHanded<code>boolean</code><p>You can or must give input with both hands.</p> urlLocalizedString<p>URL where you can use the input mechanism, e.g. on your phone.</p> video<code>boolean</code><p>The input makes a video.</p> visualRecognition<code>boolean</code><p><code>true</code> if the input user interface needs or supports visual input, <code>false</code> if not.</p> voiceActivation<code>boolean</code><p><code>true</code> if the control is activated by voice, <code>false</code> if not.</p> walk<code>boolean</code><p>Walking is supported or needed.</p> wave<code>boolean</code><p>Waving your hands is supported or needed.</p> weightMass<p>A weight you need to be able to lift.</p> wheel<code>boolean</code><p>The input features a wheel.</p> wireless<code>boolean</code><p>The input is wireless.</p>"},{"location":"describing-objects/interfaces/#animalpolicy","title":"AnimalPolicy","text":"NameTypeallowsAssistanceDogs<code>boolean</code><p><code>true</code> if the place allows visitors to bring assistance dogs, <code>false</code> if bringing them is explicitly prohibited, <code>undefined</code> if the policy is unknown.</p> allowsDogs<code>boolean</code><p><code>true</code> if the place allows visitors to bring dogs in general, <code>false</code> if bringing them is explicitly prohibited (with exception of dogs specified by <code>allowsGuideDogs</code> and <code>allowsTherapyAnimals</code>), <code>undefined</code> if the policy is unknown.</p> allowsGuideDogs<code>boolean</code><p><code>true</code> if the place allows visitors to bring guide dogs, <code>false</code> if bringing them is explicitly prohibited, <code>undefined</code> if the policy is unknown.</p> allowsServiceAnimals<code>boolean</code><p><code>true</code> if the place allows bringing any kind of animal, <code>false</code> or <code>undefined</code> if not or if there are exceptions.</p> dogsNeedMuzzle<code>boolean</code><p><code>true</code> if the place denies entry to visitors bringing a dogs without muzzles, <code>false</code> if dogs without muzzles are explicitly allowed.</p> suppliesWaterForPets<code>boolean</code><p><code>true</code> if the place supplies water for accompanying animals, <code>false</code> if explicitly not, or <code>undefined</code> if unknown.</p>"},{"location":"describing-objects/interfaces/#currencyvalue","title":"CurrencyValue","text":"<p>Describes an amount of paid money in a specific currency, per specified unit, for a specific kind of access to a service or product.</p> <p>Can represent free availability, by setting <code>amount</code> to 0, and not defining <code>currency</code>.</p> <p>Don't use this for very small amounts of money (like sub-cent dollar amounts) as this uses no BigDecimal arithmetic.</p> <p>The <code>amount</code> property is required.</p> NameTypeaccessArray of one or more of these strings:  <p> <code>customers</code> <code>delivery</code> <code>designated</code> <code>disabled</code> <code>emergency</code> <code>employees</code> <code>no</code> <code>permissive</code> <code>permit</code> <code>private</code> <code>public</code> <code>residents</code> <code>yes</code> </p> <p>For whom is this amount of money paid?</p> amount*<code>number</code><p>The amount of money.</p> currency<code>string</code><p>The currency in which the amount is specified, as three-letter acronym.</p> <p>Can be undefined if the amount is zero.</p> paymentTypesPayment[]<p>The payment method that is used to pay the amount of money.</p> perQuantity<p>Unit that is paid with the amount of money, e.g. \"minute\", \"hour\", 'GB', 'piece'</p>"},{"location":"describing-objects/interfaces/#desk","title":"Desk","text":"<p>Describes a desk / table / cash desk / reception counter.</p> NameTypedepthBelowLength<p>How much space is there under the desk? This can be used to determine if a wheelchair user can sit at the desk.</p> fixedHeightLength<p>How high is the desk? For variable-height desks, use <code>minimalHeight</code> and <code>maximalHeight</code> instead.</p> <p>This can be used to determine if a wheelchair user can sit at the desk.</p> fixedHeightBelowLength<p>How much space is there below the desk? This can be used to determine if a wheelchair user can sit at the desk.</p> interactions Object with one or more of these keys:  <p> <code>changeHeight</code> <code>checkIn</code> <code>checkOut</code> <code>close</code> <code>enqueue</code> <code>getFood</code> <code>getReturn</code> <code>getShoppingBag</code> <code>handover</code> <code>handoverLuggage</code> <code>lock</code> <code>open</code> <code>openAndClose</code> <code>pay</code> <code>ringBell</code> <code>savePreset</code> <code>scan</code> <code>selfCheckout</code> <code>unlock</code> <code>unlockAndLock</code> </p>  Values must be of type InteractionMode. <p>An object that indicates how the object can be interacted with.</p> <p>The keys of this object are the interaction types, and the values are InteractionMode objects.</p> intercom<code>undefined</code>\u00a0|\u00a0Intercom<p>Information about an intercom at this desk, if applicable.</p> <p><code>null</code> indicates there is no intercom.</p> isRollUnder<code>boolean</code><p><code>true</code> if the desk can be rolled under, <code>false</code> if not. This can be used to determine if a wheelchair user can sit at the desk.</p> maximalHeightLength<p>How high is the desk maximally? This is only for variable-height desks. Use <code>fixedHeight</code> for fixed-height desks. This can be used to determine if a wheelchair user can sit at the desk.</p> minimalHeightLength<p>How high is the desk minimally? This is only for variable-height desks. Use <code>fixedHeight</code> for fixed-height desks. This can be used to determine if a wheelchair user can sit at the desk.</p> nameLocalizedString<p>Name of the entrance (helpful if there are multiple entrances).</p> payment<code>undefined</code>\u00a0|\u00a0Payment<p>Information about payment at this desk.</p> <p><code>null</code> indicates there is no payment possible/required.</p> queueSystemQueueSystem<p>Describes an associated queue system.</p> turningSpaceInFrontLength<p>How much space is there in front of the desk? This can be used to determine if a wheelchair user can sit at the desk.</p> widthBelowLength<p>How much space is there below the desk? This can be used to determine if a wheelchair user can sit at the desk.</p>"},{"location":"describing-objects/interfaces/#door","title":"Door","text":"<p>Describes the door of a place's entrance or to one of its facilities (e.g. to a shower, or to an elevator)</p> NameTypeaccessArray of one or more of these strings:  <p> <code>customers</code> <code>delivery</code> <code>designated</code> <code>disabled</code> <code>emergency</code> <code>employees</code> <code>no</code> <code>permissive</code> <code>permit</code> <code>private</code> <code>public</code> <code>residents</code> <code>yes</code> </p> <p>Defines who this door is for. See https://wiki.openstreetmap.org/wiki/Key:access for more information.</p> colors<code>string</code>[]<p>Describes the colors of the door itself, as HTML color strings. Don't include the door frame or door marking colors in this attribute, but use <code>markingColors</code> and <code>doorFrameColors</code> instead.</p> <p>This can make the door easier to find.</p> <p>If there are multiple colors, it might be enough to describe the most dominant one.</p> <p>If there are multiple colors, but there is no predominant color, describe all of them.</p> <p>This allows to determine the contrast to the wall and the door frame.</p> <p>Its best to determine the color at daylight.</p> <p>For glass doors, you can use 'transparent' as color.</p> doorFrameColors<code>string</code>[]<p>Describes the colors of the door frame, if existent. If they are similar, describe only one color. Use HTML color strings here.</p> <p>This can make the door easier to find, and allows to determine the contrast to the door and the wall.</p> <p>If there are multiple colors, it might be enough to describe the most dominant one.</p> <p>If there are multiple colors, but there is no predominant color, describe all of them.</p> <p>Its best to determine the color at daylight.</p> doorOpensToOutside<code>boolean</code><p><code>true</code> if the door opens to the outside, <code>false</code> if it opens to the inside.</p> doorbellTopButtonHeightLength<p>Height of the door bell's top button. If there is a lowered extra door bell (often marked with a wheelchair user symbol), use the height of this one's top button.</p> grabBarsGrabBars<p>Describes grab bars in front of the door.</p> hasClearMarkingOnGlassDoor<code>boolean</code><p><code>true</code> if the door is a glass door, but is marked, <code>false</code> if the door is an unmarked glass door, <code>undefined</code> if it is no glass door or the condition is unknown.</p> hasErgonomicDoorHandle<code>boolean</code><p><code>true</code> if the door's handle is easy to use (subjectively by the assessor), <code>false</code> if not.</p> hasIntercom<code>boolean</code><p><code>true</code> if the door has an intercom system, <code>false</code> if not.</p> hasProximitySensor<code>boolean</code><p><code>true</code> if the door has a proximity sensor that triggers the opening mechanism, <code>false</code> if not.</p> hasSwitch<code>boolean</code><p><code>true</code> if the door has a switch that triggers the opening mechanism, <code>false</code> if not.</p> hasVisuallyContrastedFrame<code>boolean</code><p><code>true</code> if the door frame is visually contrasted to its surrounding wall, <code>false</code> if not.</p> interactions Object with one or more of these keys:  <p> <code>close</code> <code>lock</code> <code>open</code> <code>openAndClose</code> <code>ringDoorbell</code> <code>unlock</code> <code>unlockAndLock</code> </p>  Values must be of type InteractionMode. <p>An object that indicates how the object can be interacted with.</p> <p>The keys of this object are the interaction types, and the values are InteractionMode objects.</p> intercomIntercom<p>Describes the intercom system of the door.</p> isAlwaysOpen<code>boolean</code><p><code>true</code> if the door is there, but always open, <code>false</code> if not.</p> isAutomatic<code>boolean</code><p><code>true</code> if the door opens automatically, <code>false</code> if not. The mechanism for opening the door is defined in other attributes.</p> isAutomaticOrAlwaysOpen<code>boolean</code><p><code>true</code> if the door is always open or automatic, <code>false</code> if it has to be opened manually.</p> isEasyToHoldOpen<code>boolean</code><p><code>true</code> if the door is easy to hold open (subjectively by the assessor), <code>false</code> if not.</p> isGlassDoor<code>boolean</code><p><code>true</code> if the door is a glass door, <code>false</code> if not.</p> isRevolving<code>boolean</code><p><code>true</code> if the door is revolving (like a carousel), <code>false</code> if not.</p> isSliding<code>boolean</code><p><code>true</code> if the door is a sliding door, <code>false</code> if not.</p> isTurnstile<code>boolean</code><p><code>true</code> if the door is a turnstile, <code>false</code> if not.</p> isVisuallyContrasted<code>boolean</code><p><code>true</code> if the door is visually contrasted to its surrounding wall, <code>false</code> if not.</p> markingColors<code>string</code>[]<p>Describes the colors of a door marking, if existent, as HTML color strings.</p> <p>This can make the door easier to find.</p> <p>If there are multiple colors, it might be enough to describe the most dominant one.</p> <p>If there are multiple colors, but there is no predominant color, describe all of them.</p> <p>Its best to determine the color at daylight.</p> nearbyWallColors<code>string</code>[]<p>Describes the colors of the walls right next the door. Use HTML color strings here.</p> <p>This can make the door easier to find, and allows to determine the contrast to the door frame and the door.</p> <ul> <li>If there are multiple colors, it might be enough to describe the most dominant one.</li> <li>If there are multiple colors, but there is no predominant color, describe all of them.</li> </ul> <p>Its best to determine the color at daylight.</p> needsDoorbell<code>boolean</code><p><code>true</code> if you need to ring a doorbell to pass the entrance, <code>false</code> if not.</p> needsEuroKey<code>boolean</code><p><code>true</code> if you need a Euro key to open the door, <code>false</code> if it's in Europe outside UK and works without a key, <code>undefined</code> if it is unknown or needs a different key.</p> needsIntercom<code>boolean</code><p><code>true</code> if you need to use the intercom to pass this door, <code>false</code> if not.</p> needsKeyCard<code>boolean</code><p><code>true</code> if you need to use a keycard to pass the entrance, <code>false</code> if not.</p> needsKeyPad<code>boolean</code><p><code>true</code> if you need to use a key pad to pass this door, <code>false</code> if not.</p> needsRadarKey<code>boolean</code><p><code>true</code> if you need a RADAR key to open the door, <code>false</code> if it's in the UK but you need no key or needs a different key.</p> needsSwitchToOpen<code>boolean</code><p><code>true</code> if the door needs pressing a switch to open, <code>false</code> if not.</p> thresholdHeightLength<p>Height of the door\u2019s threshold / sill / step inside the door frame.</p> thresholdIsRounded<code>boolean</code><p><code>true</code> if the threshold has rounded edges, <code>false</code> if not.</p> turningSpaceInFrontLength<p>Turning space in front of the door.</p> widthLength<p>Width of the door.</p>"},{"location":"describing-objects/interfaces/#entrance","title":"Entrance","text":"<p>Describes an entrance to a <code>PlaceInfo</code>.</p> NameTypegeometryPointGeometry<p>The physical location of the entrance in WGS84 coordinates. Currently only a GeoJSON <code>PointGeometry</code> is supported.</p> propertiesEntranceProperties"},{"location":"describing-objects/interfaces/#entranceproperties","title":"EntranceProperties","text":"<p>Describes an entrance to a place.</p> NameTypedoor<code>undefined</code>\u00a0|\u00a0Door<p>Object that describes the entrance\u2019s door. <code>null</code> if there is no door.</p> elevatorEquipmentId<code>string</code><p>reference to the equipment id if this entrance is an elevator (on accessibility.cloud)</p> hasFixedRamp<code>boolean</code><p><code>true</code> if this entrance has a fixed ramp, <code>false</code> if not.</p> hasHoist<code>boolean</code><p><code>true</code> if there is a hoist / wheelchair lift, <code>false</code> if not.</p> hasRemovableRamp<code>boolean</code><p><code>true</code> if there is a removable ramp, <code>false</code> if not. If there is a fixed ramp, this property MUST be <code>undefined</code>.</p> hasSignage<code>boolean</code><p>If this entrance is NOT the main entrance: Is this entrance connected to the main entrance, and is there signage that points to this entrance?</p> intercomEquipmentId<code>string</code><p>reference to the equipment id of the intercom of this entrance (on accessibility.cloud)</p> isLevel<code>boolean</code><p><code>true</code> if this entrance has no steps and needs no ramp, <code>false</code> if there are steps or a ramp.</p> isMainEntrance<code>boolean</code><p><code>true</code> if this is the main entrance, <code>false</code> if not.</p> nameLocalizedString<p>Name of the entrance (helpful if there are multiple entrances).</p> needsAppointment<code>boolean</code><p><code>true</code> if you need an appointment to enter, <code>false</code> if not.</p> placeInfoId<code>string</code><p>reference to the place that this entrance is connected to (on accessibility.cloud)</p> slopeAngleSlope<p>How steep is the ground at the entrance?</p> stairsStairs<p>Object that describes stairs that you have to take to use the entrance.</p>"},{"location":"describing-objects/interfaces/#equipmentinfo","title":"EquipmentInfo","text":"<p>Describes a facility equipment that is part of a place, like an elevator, an escalator, or a sitemap. Can contain attributes that are realtime updated to indicate operational status.</p> NameTypegeometryPointGeometry<p>The physical location of the place in WGS84 coordinates. Currently only a GeoJSON <code>PointGeometry</code> is supported.</p> propertiesEquipmentProperties"},{"location":"describing-objects/interfaces/#equipmentproperties","title":"EquipmentProperties","text":"NameTypeaccessMode<code>string</code>[]<p>Access modes supported by this equipment.</p> accessModeSufficient<code>string</code>[]<p>Access mode combinations that allow understanding and using the equipment.</p> accessibilityControl<code>string</code>[]<p>The accessibility controls that allow controlling this equipment.</p> accessibilityFeature<code>string</code>[]<p>Indicates features that allow understanding or using the equipment.</p> accessibilityHazard<code>string</code>[]<p>Indicates hazards that may be an obstacle to understanding or using the equipment.</p> alternativeRouteInstructionsLocalizedString<p>Short alternative routing instructions for travelers when they cannot use this facility.</p> <p>The text MUST NOT have abbreviations to be readable aloud by a screen reader or voice assistant.</p> <p>Software using this attribute MUST NOT assume that the equipment is out of operation if it the attribute is defined.</p> cabinLengthLength<p>Length / depth of the cabin when facing the equipment\u2019s entrance, or <code>undefined</code> if the equipment has no cabin. For a hoist, this refers to the hoist platform itself.</p> cabinWidthLength<p>Width of the cabin when facing the equipment\u2019s entrance, or <code>undefined</code> if the equipment has no cabin. For a hoist, this refers to the hoist platform itself.</p> categoryOne of the following strings:  <p> <code>bed</code> <code>bodyScanner</code> <code>elevator</code> <code>escalator</code> <code>flushMechanism</code> <code>hoist</code> <code>intercom</code> <code>luggageScanner</code> <code>movingWalkway</code> <code>powerOutlet</code> <code>ramp</code> <code>sitemap</code> <code>stairLift</code> <code>switch</code> <code>vendingMachine</code> <code>wardrobe</code> </p> <p>Type of the equipment or facility.</p> descriptionLocalizedString<p>Describes where the equipment is located. If only one description string is technically possible to maintain, it MUST not contain any abbreviations to allow being readable aloud by screen readers or voice assistants.</p> disruptionSourceImportId<code>string</code><p>Data source ID of a secondary source used for realtime status info on accessibility.cloud</p> doorDoor<p>Object describing the door to the equipment, or <code>undefined</code> if there is no door.</p> emergencyIntercomIntercom<p>Describes the intercom system for emergency calls.</p> hasDoorsAtRightAngles<code>boolean</code><p><code>true</code> if the equipment has doors at right angles to each other.</p> hasDoorsInBothDirections<code>boolean</code><p><code>true</code> if the equipment has doors in two directions, so wheelchair, rollator, bike or pushchair users do not have to move backwards to exit.</p> hasExternalFloorSelection<code>boolean</code><p>For elevators. <code>true</code> if the elevator needs a command to be entered outside the elevator, <code>false</code> if not.</p> hasLandings<code>boolean</code><p><code>true</code> if the equipment has a landing platform, <code>false</code> if not. Helpful for escalators.</p> hasMirror<code>boolean</code><p>For elevators. <code>true</code> if the elevator has a mirror, <code>false</code> if not.</p> hasVisualEmergencyAlarm<code>boolean</code><p><code>true</code> if the equipment has a visual emergency alarm, <code>false</code> if not (for example, inside elevators).</p> heightOfControlsLength<p>Height of the lowest working controls that are needed to operate this equipment. <code>undefined</code> if the equipment needs no controls.</p> ids Object with one or more of these keys:  <p> <code>string</code> </p>  Values must be of type <code>string</code>. <p>IDs in other data sources that are linked to this equipment, indexed by schema/context.</p> interactions Object with one or more of these keys:  <p> <code>arriveAtFloor</code> <code>buy</code> <code>call</code> <code>callEmergency</code> <code>disable</code> <code>enable</code> <code>engage</code> <code>findYourDestination</code> <code>flush</code> <code>handover</code> <code>locateYourself</code> <code>ride</code> <code>scan</code> <code>selectFloor</code> <code>sell</code> <code>sleep</code> <code>toggle</code> <code>travel</code> <code>understand</code> <code>use</code> </p>  Values must be of type InteractionMode. <p>An object that indicates how the object can be interacted with.</p> <p>The keys of this object are the interaction types, and the values are InteractionMode objects.</p> isIndoors<code>boolean</code><p><code>true</code> if the equipment is indoors, <code>false</code> if it\u2019s fully or partially outdoors.</p> isSuitableForBicycles<code>boolean</code><p>For elevators. <code>true</code> if the elevator can carry a bicycle, <code>false</code> if not.</p> isWorking<code>boolean</code><p>Live status update.</p> <p><code>true</code> if the equipment is in operation, <code>false</code> if not, or <code>undefined</code> if it is unknown. When reading this attribute for showing it in a user interface, the user interface MUST show the operational status as \u2018unknown\u2019 if the status could be out of date, for example if it is older than 10 minutes.</p> <p>When displaying the operational status, user interfaces SHOULD show the date saved in <code>stateLastUpdate</code> next to the operational status additionally for transparency.</p> languages<code>string</code>[]<p>Languages of the equipment\u2019s visible controls and/or voice output.</p> longDescriptionLocalizedString<p>Contains the same information as description, but in a longer form which can be read out by a screen reader or voice assistant.</p> <p>Words MUST be written out fully (e.g. \u2018direction\u2019 instead of \u2018dir.\u2018, \u2018ground\u2019 instead of \u2018G\u2018, \u2018platform\u2019 instead of \u2018pl.\u2019). The field MUST NOT contain any symbols (e.g. <code>-&gt;</code>, <code>&lt;-&gt;</code>, or <code>\u2192</code>).</p> <p>This MUST be suitable for people who have a visual impairment or use a screen reader or voice assistant (e.g. Amazon\u2019s Alexa).</p> <p>If only one description field can be used for technical reasons, then the written-out form MUST be given preference, because a short form can be generated from the long form more easily than the other way around.</p> <p>This attribute SHOULD be used as <code>aria-label</code>-attribute in web content.</p> manufacturerNameLocalizedString<p>Official name of the company that manufactured the equipment.</p> manufacturerSerialNumber<code>string</code><p>Manufacturer serial number of the equipment / facility.</p> <p>Intentionally not localizable to allow matching with other data, e.g. from manufacturer's own APIs.</p> originalData<code>string</code><p>Original source data for this equipment (for easier debugging)</p> originalId<code>string</code><p>ID of this equipment in the original data source. To simplify communication with the operator, it\u2019s a good idea to use the operator facility management system ID here.</p> originalPlaceInfoId<code>string</code><p>ID of the place that this equipment belongs to (unique in the original data source)</p> outOfOrderReasonLocalizedString<p>Live status update.</p> <p>Reason why the equipment is not in operation. MUST be <code>undefined</code> if the equipment is in operation.</p> placeInfoId<code>string</code><p>Place info ID that this equipment belongs to (accessibility.cloud ID)</p> placeSourceId<code>string</code><p>ID of the place data source that this equipment belongs to (accessibility.cloud ID)</p> plannedCompletionDateDate<p>Live status update.</p> <p>If <code>isWorking</code> is false, this is the planned date when the equipment will be in operation again.</p> <p>MUST be <code>undefined</code> if the facility is currently in operation.</p> sameAs<code>string</code>[]<p>URLs of this equipment in external data sources, for example in GTFS, IMDF or other sources.</p> servicePhoneNumber<code>string</code><p>Phone number where a service operator can be reached for help using this facility.</p> serviceWebsiteUrl<code>string</code><p>URL pointing to a website that describes the equipnent or it's current operational status.</p> shortDescriptionLocalizedString<p>Contains the same information as description, but in a shorter form, to save space on the screen. This CAN contain Unicode characters such as \u27f7 or \u2198\ufe0e as well as abbreviations (e.g. \u2018pl.\u2019 instead of \u2018platform\u2019, \u2018dir.\u2019 instead of \u2018direction\u2019).</p> sourceId<code>string</code><p>Data source ID on accessibility.cloud</p> sourceImportId<code>string</code><p>Data import ID on accessibility.cloud</p> stateExplanationLocalizedString<p>Live status update.</p> <p>Information about the current state. If <code>isWorking</code> is true, this can show information about future planned maintenance or construction work rendering this facility unusable.</p> <p>The text MUST NOT have abbreviations to be readable aloud by a screen reader or voice assistant.</p> <p>This field SHOULD only be used if a separation into individual disorder attributes (<code>state</code>, <code>outOfOrderReason</code>) is not technically possible (e.g. when existing APIs can not be further developed and users are only given one text field to describe the problem.)</p> stateLastUpdateDate<p>Live status update.</p> <p>Date when the <code>isWorking</code> flag was updated by a realtime system.</p>"},{"location":"describing-objects/interfaces/#grabbars","title":"GrabBars","text":"<p>Describes grab bars or hand rails.</p> <p>The <code>continuous</code> property is required.</p> NameTypecontinuous*<code>boolean</code><p>Indicates if the grab bars are continuous or not. Helpful for stair grab rails.</p> distanceBetweenBarsLength<p>Indicates how far the bars are apart.</p> foldable<code>boolean</code><p><code>true</code> if the grab bars can be folded, <code>false</code> if not..</p> inFrontOfTheUser<code>boolean</code><p><code>true</code> if there is a folding handle in front of the user, <code>false</code> if not.</p> <p>Seen from the perspective</p> <ul> <li>of somebody using a toilet</li> <li>of somebody in front of stairs, facing upwards</li> <li>of somebody in front of a door</li> </ul> interactions Object with one or more of these keys:  <p> <code>findYourDestination</code> <code>localizeYourself</code> </p>  Values must be of type InteractionMode. <p>An object that indicates how the object can be interacted with.</p> <p>The keys of this object are the interaction types, and the values are InteractionMode objects.</p> onUsersLeftSide<code>boolean</code><p><code>true</code> if there is a folding handle on left side, <code>false</code> if not.</p> <p>Seen from the perspective</p> <ul> <li>of somebody using a toilet</li> <li>of somebody in front of stairs, facing upwards</li> <li>of somebody in front of a door</li> </ul> onUsersRightSide<code>boolean</code><p><code>true</code> if there is a folding handle on right side, <code>false</code> if not.</p> <p>Seen from the perspective</p> <ul> <li>of somebody using a toilet</li> <li>of somebody in front of stairs, facing upwards</li> <li>of somebody in front of a door</li> </ul> topHeightFromFloorLength<p>Indicates how high the grab bars are (top edge, measured from the floor).</p>"},{"location":"describing-objects/interfaces/#interactable","title":"Interactable","text":"NameTypeinteractions Object with one or more of these keys:  <p> InteractionType </p>  Values must be of type InteractionMode. <p>An object that indicates how the object can be interacted with.</p> <p>The keys of this object are the interaction types, and the values are InteractionMode objects.</p>"},{"location":"describing-objects/interfaces/#interactionmode","title":"InteractionMode","text":"<p>Describes how you can interact with a thing and which abilities you need to do so.</p> NameTypeactionActionMode<p>Action modes that are absolutely necessary to facilitate the interaction, e.g. \u2018pushing a button\u2019.</p> descriptionLocalizedString<p>Describes the output as human-readable text.</p> languages<code>string</code>[]<p>Input languages supported.</p> nameLocalizedString<p>Describes which output is meant. Helpful if there are multiple outputs.</p> optional<code>boolean</code><p><code>true</code> if the interaction is optional, <code>false</code> if it is required.</p> perceptionPerceptionMode<p>Perception modes supported to facilitate the interaction.</p> required<code>boolean</code><p><code>false</code> if the interaction is optional, <code>true</code> if it is required.</p>"},{"location":"describing-objects/interfaces/#intercom","title":"Intercom","text":"<p>Describes a system to communicate over distance, e.g. a door intercom next to a doorbell.</p> NameTypeambientNoiseLevelVolume<p>The ambient noise level when using the intercom.</p> audioIsComprehensible<code>boolean</code><p><code>true</code> if intercom system\u2019s audio quality is good enough for understanding speech, <code>false</code> if not.</p> descriptionLocalizedStringhasAudio<code>boolean</code><p><code>true</code> if the door has an audio intercom system, <code>false</code> if not.</p> hasVideoCamera<code>boolean</code><p><code>true</code> if the door has a video intercom system, <code>false</code> if not.</p> hasVisualFeedbackOnConnection<code>boolean</code><p><code>true</code> if the intercom system has a visual feedback, <code>false</code> if not. Visual feedback might be a screen or light that displays if a connection is established.</p> interactions Object with one or more of these keys:  <p> <code>call</code> <code>close</code> <code>hangUp</code> <code>identify</code> <code>open</code> <code>ring</code> </p>  Values must be of type InteractionMode. <p>An object that indicates how the object can be interacted with.</p> <p>The keys of this object are the interaction types, and the values are InteractionMode objects.</p> necessaryGripHeightLength<p>The height of the top control element of the intercom system.</p> needsKeyPad<code>boolean</code><p><code>true</code> if you need to use a key pad to pass this door, <code>false</code> if not.</p>"},{"location":"describing-objects/interfaces/#media","title":"Media","text":"<p>Describes a media unit provided at this place, for example an exhibit at a museum or a movie in a cinema.</p> NameTypeaccessMode<code>string</code>[]<p>Access modes supported by this equipment.</p> accessModeSufficient<code>string</code>[]<p>Access mode combinations that allow understanding and using the equipment.</p> accessibilityControl<code>string</code>[]<p>The accessibility controls that allow controlling this equipment.</p> accessibilityFeature<code>string</code>[]<p>Indicates the access mode combinations that allow understanding and using the equipment.</p> accessibilityHazard<code>string</code>[]<p>Indicates the access mode combinations that allow understanding and using the equipment.</p> hasAudioDescription<code>boolean</code><p>Is the media unit provided with audio description?</p> hasContrastingBackground<code>boolean</code><p>If the media unit is printed or on a screen, does it have high contrast between background and foreground?</p> hasDedicatedScreenForSubtitles<code>boolean</code><p>Relevant for movies, screens and presentations: Is there a dedicated screen where subtitles can be read?</p> hasPlainLanguageOption<code>boolean</code><p>Is the media unit provided in a Plain Language option?</p> hasRealTimeCaptioning<code>boolean</code><p>Does the media unit have real time captioning?</p> hasSubtitles<code>boolean</code><p>Is the media unit provided with subtitles?</p> isAudio<code>boolean</code><p>Is the media unit consumable as audio-only option?</p> isBraille<code>boolean</code><p>Is the media unit consumable or described for Braille readers?</p> isLargePrint<code>boolean</code><p>If the media unit is printed, is the print large?</p> isTactile<code>boolean</code><p>Is the media tactile?</p> languages<code>string</code>[]<p>Specifies which languages (including sign languages) in which the media unit is provided</p> nameLocalizedString<p>Name of the media unit (relevant if there are multiple units of the same kind)</p> sameAs<code>string</code>[]<p>URLs that contain the media. Use this to link data, for example with RDF.</p> turningSpaceInFrontLength<p>If the media is consumed while the consumer is directly in front of it, this property specifies how much turning space there is in front of it.</p> typeOne of the following strings:  <p> <code>document</code> <code>exhibit</code> <code>guide</code> <code>menu</code> <code>movie</code> <code>play</code> <code>presentation</code> <code>screen</code> <code>tour</code> <code>website</code> </p> <p>Type of the media unit</p>"},{"location":"describing-objects/interfaces/#mirror","title":"Mirror","text":"<p>Describes a mirror.</p> <p><code>heightFromGround</code>  and  <code>isAccessibleWhileSeated</code> properties are required.</p> NameTypeheightFromGround*Length<p>How far is the mirror's bottom from the ground?</p> interactions Object with one or more of these keys:  <p> <code>adjust</code> <code>clean</code> <code>move</code> <code>turn</code> <code>use</code> </p>  Values must be of type InteractionMode. <p>An object that indicates how the object can be interacted with.</p> <p>The keys of this object are the interaction types, and the values are InteractionMode objects.</p> isAccessibleWhileSeated*<code>boolean</code><p><code>true</code> if the mirror is accessible while sitting in a wheelchair, <code>false</code> if not.</p> isLocatedInsideRestroom<code>boolean</code><p><code>true</code> if the mirror is located inside the restroom, <code>false</code> if not.</p>"},{"location":"describing-objects/interfaces/#parking","title":"Parking","text":"NameTypecount<code>number</code>forWheelchairUsers<code>undefined</code>\u00a0|\u00a0WheelchairParkinginteractions Object with one or more of these keys:  <p> <code>arrive</code> <code>enterVehicle</code> <code>exitVehicle</code> <code>park</code> </p>  Values must be of type InteractionMode. <p>An object that indicates how the object can be interacted with.</p> <p>The keys of this object are the interaction types, and the values are InteractionMode objects.</p>"},{"location":"describing-objects/interfaces/#pathways","title":"Pathways","text":"<p>Describes one or multiple pathways inside a place.</p> NameTypeisKerbstoneFree<code>boolean</code><p><code>true</code> if the pathway is kerbstone-free, <code>false</code> if not.</p> surfaceSurfacewidthLength<p>Width constraints of all pathways inside a place relevant for consumers.</p> widthAtObstaclesLength<p>Width constraints of all pathways inside a place relevant for consumers.</p>"},{"location":"describing-objects/interfaces/#payment","title":"Payment","text":"<p>The <code>Payment</code> interface describes the payment options at a location.</p> NameTypeacceptsBills<code>boolean</code>acceptsCoins<code>boolean</code>acceptsCreditCards<code>boolean</code>acceptsDebitCards<code>boolean</code>acceptsPaymentByMobilePhone<code>boolean</code>customPaymentMetaInfoLocalizedString[]hasPortablePaymentSystem<code>boolean</code>"},{"location":"describing-objects/interfaces/#perceptionmode","title":"PerceptionMode","text":"<p>Describes necessary abilities and modes for interpreting information output, signals, or content.</p> NameTypeaccelerationAcceleration<p>Feedback force applied to the user.</p> activationSignal<code>boolean</code><p>The output is an activation/engagement signal.</p> ambientNoiseLevelVolume<p>Ambient noise level in dB(A) relative to a reference pressure of 0.00002 Pa. Median over a 10-second period at least.</p> ambientTemperatureTemperature<p>The ambient temperature around the output.</p> animation<code>boolean</code><p>The output is animated.</p> apiDocumentationUrl<code>string</code><p>The input API documentation URL.</p> attentionSpanTimeInterval<p>Attention time span needed to understand the output.</p> audibleClick<code>boolean</code><p>The output has an acoustic click feedback.</p> audioDescription<code>boolean</code><p>The output has  audio description.</p> audioIsComprehensible<code>boolean</code><p><code>true</code> if the system\u2019s audio quality is good enough for understanding speech, <code>false</code> if it is difficult.</p> backgroundColors<code>string</code>[]<p>Background output HTML colors (for example, the background behind a text or icon).</p> backgroundMusic<code>boolean</code><p>There is background music playing.</p> beep<code>boolean</code><p>The output uses one or more beeps as signal.</p> bing<code>boolean</code><p>The output uses one or more bing-like signals.</p> blackAndWhite<code>boolean</code><p>The output uses black and white colors.</p> braille<code>boolean</code><p>The ability to read braille is supported or needed.</p> breathing<code>boolean</code><p>The light looks like it is breathing.</p> brightnessBrightness<p>The output's brightness.</p> byod<code>boolean</code><p><code>true</code> if you can or have to perceive the content with a device that you own.</p> cable<code>boolean</code><p>A cable is supported or needed.</p> chart<code>boolean</code><p>The output uses one or more charts.</p> colorCode<code>boolean</code><p>The output uses a discrete color code.</p> colorGradient<code>boolean</code><p>The output uses a color gradient.</p> contentWarningLocalizedString<p>Lists potential content warnings you have to expect here. User interfaces should not show the content warning directly, but should instead show a button to show the content warning.</p> dedicatedScreenForSubtitles<code>boolean</code><p>The output has a dedicated screen for subtitles.</p> descriptionLocalizedString<p>Describes the content/output/signal as human-readable text.</p> durationTimeInterval<p>Time interval in which the output is active.</p> educationLevelNumber<p>Education level needed to understand the output.</p> <p>http://www.ibe.unesco.org/en/glossary-curriculum-terminology/l/levels-education</p> <ul> <li>early childhood education (level 0)</li> <li>primary education (level 1)</li> <li>lower secondary education (level 2)</li> <li>upper secondary education (level 3)</li> <li>postsecondary non-tertiary education (level 4)</li> <li>short-cycle tertiary education (level 5)</li> <li>bachelor\u2019s or equivalent level (level 6)</li> <li>master\u2019s or equivalent level (level 7)</li> <li>doctor or equivalent level (level 8).</li> </ul> flash<code>boolean</code><p>The output is a flashing light.</p> flashingHazard<code>boolean</code><p><code>true</code> if the output is a flashing hazard, <code>false</code> if there is explicitly no flashing hazard and someone / something ensures this. This can be relevant for people with epilepsy.</p> fontSizeLength<p>Font size used in the output.</p> forceForce<p>Feedback force applied to the user.</p> forceFeedback<code>boolean</code><p>The content/output/signal has active force feedback.</p> foregroundColors<code>string</code>[]<p>Foreground output HTML colors (for example, the text or icon color).</p> framerateHertz<p>The framerate of animations.</p> frequencyHertz<p>The frequency of the output, for tones or flashes.</p> fullBody<code>boolean</code><p>The content/output/signal affects your full body.</p> handwritten<code>boolean</code><p>The content is handwritten.</p> haptic<code>boolean</code><p>The output is haptic.</p> hapticClick<code>boolean</code><p>The output has a haptic click feedback.</p> headphone<code>boolean</code><p>Headphones are supported or needed.</p> heat<code>boolean</code><p>Heat perception is supported or needed.</p> highContrast<code>boolean</code><p>The output is displayed in high contrast.</p> instructionsUrlLocalizedString<p>URL describing how to make use of the content/output/signal.</p> isEasyToFind<code>boolean</code><p><code>true</code> if the input is easy to find.</p> isEasyToUnderstand<code>boolean</code><p><code>true</code> if the input is easy to understand, <code>false</code> if people might face difficulties trying to understand how the input works, or <code>undefined</code> if this is unknown or irrelevant.</p> languages<code>string</code>[]<p>Content languages supported.</p> led<code>boolean</code><p>The output is an LED.</p> light<code>boolean</code><p>The output is a light.</p> morse<code>boolean</code><p>The output uses morse code.</p> music<code>boolean</code><p>The output uses music.</p> nameLocalizedString<p>Describes which output is meant. Helpful if there are multiple signals/outputs/content lements.</p> necessaryEyeHeightLength<p>How tall do you have to be to perceive the content/output/signal.</p> necessaryGripHeightLength<p>The height you need to grip to perceive the content/output/signal.</p> needsHighConcentration<code>boolean</code><p>The output needs high concentration to understand.</p> numbers<code>boolean</code><p>The output uses one or more numbers.</p> optional<code>boolean</code><p><code>true</code> if the perception is optional, <code>false</code> if it is required.</p> paper<code>boolean</code><p>The output is displayed on a paper.</p> pictograms<code>boolean</code><p>The output uses one or more pictograms.</p> pitchedTone<code>boolean</code><p>The output uses a pitched tone as signal.</p> plainLanguageOption<code>boolean</code><p>The output has a plain language option.</p> printer<code>boolean</code><p>The output is from a printer.</p> qrCode<code>boolean</code><p>A QR code is supported or needed.</p> radio<code>boolean</code><p>A radio connection is supported or needed (e.g. WiFi, Bluetooth, NFC, etc.)</p> read<code>boolean</code><p>The ability to read is supported or needed.</p> realTimeCaptioning<code>boolean</code><p>The output has realtime captioning.</p> required<code>boolean</code><p><code>false</code> if the perception is required to make use of the main function of the described object, <code>true</code> if it is required.</p> rhythmic<code>boolean</code><p>The output is rhythmic.</p> screen<code>boolean</code><p>The output is displayed on a screen.</p> signLanguage<code>boolean</code><p>The ability to understand sign language is supported or needed.</p> smell<code>boolean</code><p>The ability to smell is supported or needed.</p> sound<code>boolean</code><p>The output is acoustic.</p> soundVolumeVolume<p>The content/output/signal has active vibration feedback.</p> speech<code>boolean</code><p>The ability to understand speech is supported or needed.</p> static<code>boolean</code><p><code>true</code> if the output is usually static and does not change over time, <code>false</code> if it is dynamic and changes over time.</p> subtitles<code>boolean</code><p>The output has subtitles.</p> tactile<code>boolean</code><p>The output is tactile.</p> tactileGuides<code>boolean</code><p>The output has tactile guides, for example around buttons.</p> taste<code>boolean</code><p>Tasting something is supported or needed.</p> techSufficientTechCombination[]<p>Technology combinations that are sufficient to make use of the content/output/signal.</p> techSupportedTechCombination[]<p>Technologies that are sufficient to make use of the content/output/signal.</p> temperatureTemperature<p>The temperature of the output.</p> urgencyOne of the following strings:  <p> <code>alarm</code> <code>alert</code> <code>debug</code> <code>info</code> <code>warning</code> </p> <p>Urgency of the content when perceived.</p> urlLocalizedString<p>URL where you can see or make use of the content/output/signal, e.g. on your phone.</p> vibration<code>boolean</code><p>The content/output/signal has active vibration feedback.</p> visual<code>boolean</code><p>The output is visual.</p>"},{"location":"describing-objects/interfaces/#personalprofile","title":"PersonalProfile","text":"<p>Describes a person. This exists only to transform data from sources where no physical attributes of places have been captured as data directly. It's better to describe physical attributes of places and let people decide themselves which facilities they need or which place condition works for them.</p> NameTypeblindness<code>boolean</code><p><code>true</code> for a person that is blind.</p> guideDog<code>boolean</code><p><code>true</code> for a person that has a guide dog.</p> hearingImpairment<code>boolean</code><p><code>true</code> for a person that has a hearing impairment.</p> learningImpairment<code>boolean</code><p><code>true</code> for a person that has a learning impairment.</p> mobilityImpairment<code>boolean</code><p><code>true</code> for a person that has a mobility impairment.</p> muteness<code>boolean</code><p><code>true</code> for a person that is inable to speak.</p> visualImpairment<code>boolean</code><p><code>true</code> for a person that has a visual impairment.</p> wheelchair<code>boolean</code><p><code>true</code> for a person that uses a wheelchair.</p>"},{"location":"describing-objects/interfaces/#placeinfo","title":"PlaceInfo","text":"<p>The PlaceInfo interface describes a physical location with added accessibility properties.</p> <p><code>geometry</code>  and  <code>properties</code> properties are required.</p> NameTypeformatVersion<code>string</code><p>The format version this place info document was created with (Uses the npm module version from <code>package.json</code>) Not used right now, but added for future compatibility.</p> geometry*PointGeometry<p>The physical location of the place in WGS84 coordinates. Currently only a GeoJSON <code>PointGeometry</code> is supported.</p> properties*PlaceProperties<p>Holds additional place properties such as name and category and accessibility information</p>"},{"location":"describing-objects/interfaces/#placeproperties","title":"PlaceProperties","text":"<p>Properties of a place of interest.</p> <p>The <code>category</code> property is required.</p> NameTypeaccessArray of one or more of these strings:  <p> <code>customers</code> <code>delivery</code> <code>designated</code> <code>disabled</code> <code>emergency</code> <code>employees</code> <code>no</code> <code>permissive</code> <code>permit</code> <code>private</code> <code>public</code> <code>residents</code> <code>yes</code> </p> <p>Defines who this restroom is for. See https://wiki.openstreetmap.org/wiki/Key:access for more information.</p> accessibility<code>undefined</code>\u00a0|\u00a0Accessibility<p>The accessibility of this place. <code>null</code> indicates that this place has no data, <code>undefined</code> or missing property indicates unknown.</p> address<code>undefined</code>\u00a0|\u00a0StructuredAddress<p>The address of this place. <code>null</code> indicates that this place has no address, <code>undefined</code> or missing property indicates unknown.</p> category*<code>string</code><p>Category name of the place</p> descriptionLocalizedString<p>Text description containing helpful information for people with disabilities.</p> editPageUrl<code>string</code><p>URL of the original data source\u2019s website on a subpage that allows to edit the original data.</p> emailAddress<code>string</code><p>Email address of the place's operator where you can get accessibility relevant information.</p> ids Object with one or more of these keys:  <p> <code>string</code> </p>  Values must be of type <code>string</code>. <p>IDs in other data sources that are linked to this equipment, indexed by schema/context.</p> infoPageUrl<code>string</code><p>URL of the original data source\u2019s website describing this place.</p> nameLocalizedString<p>The official name of this place.</p> originalData<code>any</code><p>Original source data for this equipment (for easier debugging)</p> originalId<code>string</code><p>ID of this place of interest in the original data source. To simplify communication with the data provider, it\u2019s a good idea to use the provider's internal ID here.</p> originalParentPlaceInfoId<code>string</code><p>The parent's place ID in the original dataset from the data provider.</p> parentPlaceInfoId<code>string</code><p>ID of the parent place that this place belongs to.</p> parentPlaceSourceId<code>string</code><p>Source ID of the parent place that this place belongs to. This is usually the same ID as <code>sourceId</code>, but the parent place can be from another data provider.</p> phoneNumber<code>string</code><p>Phone number to call a representant of the place's operator.</p> placeWebsiteUrl<code>string</code><p>URL of the place\u2019s own website.</p> sameAs<code>string</code>[]<p>URLs of this equipment in external data sources, for example in GTFS, IMDF or other sources.</p> sourceId<code>string</code><p>ID of the data source that provided the place (accessibility.cloud ID)</p> sourceImportId<code>string</code><p>ID of the import that created this place (accessibility.cloud ID)</p>"},{"location":"describing-objects/interfaces/#pointgeometry","title":"PointGeometry","text":"<p>GeoJSON <code>Point</code> object.</p> <p><code>coordinates</code>  and  <code>type</code> properties are required.</p> NameTypecoordinates*tuple with 2 <code>number</code> elementstype*<code>\"Point\"</code>"},{"location":"describing-objects/interfaces/#quantity","title":"Quantity","text":"<p>Describes a quantity of a unit type.</p> NameTypeaccuracy<code>number</code><p>\u00b1 in given units, uniform error.</p> max<code>number</code><p>maximal value (inclusive)</p> min<code>number</code><p>minimal value (inclusive)</p> operatorOne of the following strings:  <p> <code>!=</code> <code>&lt;</code> <code>&lt;=</code> <code>=</code> <code>==</code> <code>&gt;</code> <code>&gt;=</code> <code>~</code> <code>~=</code> </p> <p>the operator, indicating the value is not an absolute value</p> precision<code>number</code><p>\u00b1 in given units, uniform error</p> rawValue<code>string</code><p>raw, imported value, eg. '90 .. 120cm' - only required when importing</p> unit<code>string</code><p>one of the length units in js-quantities</p> value<code>number</code><p>the value in the specified unit</p>"},{"location":"describing-objects/interfaces/#queuesystem","title":"QueueSystem","text":"<p>Describes a system that encourages or forces people to queue up.</p> NameTypecanSkipQueueWithDisability<code>boolean</code><p><code>true</code> if you can skip the queue with a disability, <code>false</code> if not.</p> grabBarsGrabBars<p>Grab bars inside the queueing system, if applicable.</p> interactions Object with one or more of these keys:  <p> <code>arrive</code> <code>checkIn</code> <code>checkOut</code> <code>enqueue</code> <code>getOnesTurn</code> <code>getTicket</code> <code>leaveQueue</code> <code>skipQueue</code> <code>wait</code> </p>  Values must be of type InteractionMode. <p>An object that indicates how the object can be interacted with.</p> <p>The keys of this object are the interaction types, and the values are InteractionMode objects.</p> needsTickets<code>boolean</code><p><code>true</code> if the queueing uses tickets (usually numbered), <code>false</code> if not.</p> numberOfQueueServerPoints<code>number</code><p>Number of queue server points.</p> numberOfSeats<code>number</code><p>Number of seats that can be used by people while waiting in the queue.</p> usesCattleBars<code>boolean</code><p><code>true</code> if the queueing uses rails / cattle bars, <code>false</code> if not.</p>"},{"location":"describing-objects/interfaces/#restroom","title":"Restroom","text":"<p>Describes a <code>Room</code> that contains one or more <code>Toilet</code>s or <code>Shower</code>s.</p> NameTypeaccessArray of one or more of these strings:  <p> <code>customers</code> <code>delivery</code> <code>designated</code> <code>disabled</code> <code>emergency</code> <code>employees</code> <code>no</code> <code>permissive</code> <code>permit</code> <code>private</code> <code>public</code> <code>residents</code> <code>yes</code> </p> <p>Defines who this restroom is for. See https://wiki.openstreetmap.org/wiki/Key:access for more information.</p> addressStructuredAddressdescriptionLocalizedStringentranceEntrance<p>Object describing the entrance to this restroom.</p> hasBathTub<code>boolean</code><p><code>true</code> if there is a bath tub in this room, <code>false</code> if not, <code>undefined</code> if condition is unknown.</p> hasCeilingHoist<code>boolean</code><p><code>true</code> if the restroom has a ceiling hoist, <code>false</code> if not.</p> hasChangingTableForAdults<code>boolean</code><p><code>true</code> if the restroom has a changing table for adults, <code>false</code> if not.</p> hasChangingTableForBabies<code>boolean</code><p><code>true</code> if the restroom has a changing table for babies, <code>false</code> if not.</p> hasEmergencyPullstring<code>boolean</code><p><code>true</code> if the restroom has an emergency pull string, <code>false</code> if not.</p> hasMirror<code>boolean</code><p><code>true</code> if the restroom has a mirror, <code>false</code> if not.</p> hasShower<code>boolean</code><p><code>true</code> if the restroom has a shower, <code>false</code> if not.</p> hasSupportRails<code>boolean</code><p><code>true</code> if there support rails on the walls</p> heightOfDrierLength<p>At which height from the floor is the drier or towel?</p> heightOfSoapLength<p>At which height from the floor is the soap?</p> interactions Object with one or more of these keys:  <p> <code>closeWindow</code> <code>enter</code> <code>exit</code> <code>lookAround</code> <code>openWindow</code> <code>play</code> <code>see</code> <code>sit</code> <code>sleep</code> <code>stand</code> <code>storeThings</code> <code>wait</code> </p>  Values must be of type InteractionMode. <p>An object that indicates how the object can be interacted with.</p> <p>The keys of this object are the interaction types, and the values are InteractionMode objects.</p> isAccessibleWithWheelchair<code>boolean</code><p><code>true</code> if the room's relevant facilities are completely accessible while using a wheelchair, <code>false</code> if not, <code>undefined</code> if the condition is unknown or difficult to assess.</p> mirrorMirror<p>Describes a mirror, if existing.</p> sameAs<code>string</code>[]showerShower<p>Object describing a shower inside this restroom, if existing.</p> signIconsArray of one or more of these strings:  <p> <code>allGender</code> <code>baby</code> <code>changingTable</code> <code>family</code> <code>female</code> <code>male</code> <code>personInWheelchair</code> <code>toiletBowl</code> <code>urinal</code> <code>washBasin</code> </p> <p>Visible icons on the restroom\u2019s sign</p> toiletToilet<p>Object describing a toilet inside the restroom, if existing.</p> turningSpaceInsideLength<p>How wide is the space inside that is usable for turning?</p> usageFeeCurrencyValue[]<p>Defines how much you have to pay to use this restroom. There might be multiple fee amounts, e.g. for different access types or usage times.</p> washBasinWashBasin<p>Object describing a wash basin belonging to this restroom. It can be outside of the restroom.</p>"},{"location":"describing-objects/interfaces/#room","title":"Room","text":"<p>Describes a room inside a structure.</p> NameTypeaddressStructuredAddressdescriptionLocalizedStringinteractions Object with one or more of these keys:  <p> <code>closeWindow</code> <code>enter</code> <code>exit</code> <code>lookAround</code> <code>openWindow</code> <code>play</code> <code>see</code> <code>sit</code> <code>sleep</code> <code>stand</code> <code>storeThings</code> <code>wait</code> </p>  Values must be of type InteractionMode. <p>An object that indicates how the object can be interacted with.</p> <p>The keys of this object are the interaction types, and the values are InteractionMode objects.</p> isAccessibleWithWheelchair<code>boolean</code><p><code>true</code> if the room's relevant facilities are completely accessible while using a wheelchair, <code>false</code> if not, <code>undefined</code> if the condition is unknown or difficult to assess.</p> sameAs<code>string</code>[]"},{"location":"describing-objects/interfaces/#seat","title":"Seat","text":"<p>Describes one or multiple seats / chairs / benches / stools / couches / sofas / armchairs / ...</p> NameTypeadjustmentAxesArray of one or more of these strings:  <p> <code>axial</code> <code>coronal</code> <code>sagittal</code> </p> <p>The seat can be adjusted in the following axes.</p> adjustmentDirectionsArray of one or more of these strings:  <p> <code>backward</code> <code>clockwise</code> <code>counterclockwise</code> <code>down</code> <code>forward</code> <code>left</code> <code>right</code> <code>up</code> </p> <p>The seat can be adjusted in the following directions.</p> columns<code>number</code>[]<p>The seat column numbers. This is only for seats in a fixed seating arrangement.</p> descriptionLocalizedString<p>Name of the entrance (helpful if there are multiple entrances).</p> fixedHeightLength<p>How high is the desk? For variable-height desks, use <code>minimalHeight</code> and <code>maximalHeight</code> instead.</p> <p>This can be used to determine if a wheelchair user can sit at the desk.</p> hasHeadRest<code>boolean</code><p>The seat has a headrest.</p> hasSeatbelt<code>boolean</code><p>The seat has a seatbelt.</p> interactions Object with one or more of these keys:  <p> <code>adjust</code> <code>adjustArmRests</code> <code>adjustBackRest</code> <code>adjustFootRest</code> <code>adjustHeadRest</code> <code>adjustHeight</code> <code>adjustLegRest</code> <code>adjustSeatBelt</code> <code>adjustSeatBeltAngle</code> <code>adjustSeatBeltHeight</code> <code>adjustSeatBeltLength</code> <code>adjustSeatBeltLock</code> <code>adjustSeatBeltPosition</code> <code>adjustSeatBeltTension</code> <code>adjustSeatingAngle</code> <code>adjustSeatingSurface</code> <code>connectSeatbelt</code> <code>fold</code> <code>move</code> <code>sit</code> <code>unfold</code> </p>  Values must be of type InteractionMode. <p>An object that indicates how the object can be interacted with.</p> <p>The keys of this object are the interaction types, and the values are InteractionMode objects.</p> intercom<code>undefined</code>\u00a0|\u00a0Intercom<p>Information about an intercom at this seat, if applicable.</p> <p><code>null</code> indicates there is no intercom.</p> isCenterColumn<code>boolean</code><p>The seat is located at the center of the seating arrangement, laterally.</p> isFixed<code>boolean</code><p>The seat is fixed.</p> isFoldable<code>boolean</code><p>The seat can be folded.</p> isFrontRow<code>boolean</code><p>The seat is located at the front row of the seating arrangement.</p> isLastRow<code>boolean</code><p>The seat is located at the last row of the seating arrangement.</p> isMobile<code>boolean</code><p>The seat is mobile.</p> isWheelchairAccessible<code>boolean</code><p>The seat is wheelchair accessible.</p> maximalHeightLength<p>How high is the desk maximally? This is only for variable-height desks. Use <code>fixedHeight</code> for fixed-height desks. This can be used to determine if a wheelchair user can sit at the desk.</p> minimalHeightLength<p>How high is the desk minimally? This is only for variable-height desks. Use <code>fixedHeight</code> for fixed-height desks. This can be used to determine if a wheelchair user can sit at the desk.</p> nameLocalizedString<p>Name of the entrance (helpful if there are multiple entrances).</p> payment<code>undefined</code>\u00a0|\u00a0Payment<p>Information about payment at this seat or the cost of using this seat.</p> <p><code>null</code> indicates there is no payment possible/required.</p> reservedForPersonsWithPersonalProfile<p>The seat is reserved for persons with the given profile.</p> rows<code>number</code>[]<p>The seat row numbers. This is only for seats in a fixed seating arrangement.</p> seatbeltPoints<code>number</code><p>The number of seatbelt points.</p> turningSpaceInFrontLength<p>How much space is there in front of the desk? This can be used to determine if a wheelchair user can sit at the desk.</p>"},{"location":"describing-objects/interfaces/#shower","title":"Shower","text":"<p>Describes a shower.</p> NameTypedoorDoorgrabBarsGrabBars<p>Ergonomic handles inside the shower.</p> hasShowerSeat<code>boolean</code><p><code>true</code> if the shower has a seat, <code>false</code> if not..</p> hasSupportRails<code>boolean</code><p><code>true</code> if the shower has support rails, <code>false</code> if not.</p> interactions Object with one or more of these keys:  <p> <code>transfer</code> <code>useConditioner</code> <code>useShampoo</code> <code>useShowerCurtain</code> <code>useShowerGel</code> <code>useShowerHead</code> <code>useSoap</code> <code>useSupport</code> <code>wash</code> </p>  Values must be of type InteractionMode. <p>An object that indicates how the object can be interacted with.</p> <p>The keys of this object are the interaction types, and the values are InteractionMode objects.</p> seatSeat<p>Describes the shower seat, if existing.</p> stairsStairs"},{"location":"describing-objects/interfaces/#signage","title":"Signage","text":"<p>Describes a signage / physical navigation system belonging to a location.</p> NameTypedescriptionLocalizedString<p>A description of the signage.</p> fontHeightLength<p>The height of the font used on the signage. Most likely in millimeters, using a range.</p> hasAudio<code>boolean</code><p><code>true</code> if the signage has audio, <code>false</code> if not.</p> hasBraille<code>boolean</code><p><code>true</code> if the signage has braille, <code>false</code> if not.</p> hasNumbers<code>boolean</code><p><code>true</code> if the signage uses a numbering scheme, <code>false</code> if not, <code>undefined</code> if condition is unknown.</p> hasPictograms<code>boolean</code><p><code>true</code> if the signage has pictograms, <code>false</code> if not.</p> hasRaisedLetters<code>boolean</code><p><code>true</code> if the signage has raised letters, <code>false</code> if not.</p> hasSearch<code>boolean</code><p><code>true</code> if the signage has a search function, <code>false</code> if not, <code>undefined</code> if condition is unknown.</p> hasTactileGuideStrips<code>boolean</code><p><code>true</code> if the signage has tactile guide strips, <code>false</code> if not, <code>undefined</code> if condition is nknown.</p> hasTactileHandRails<code>boolean</code><p><code>true</code> if the signage has tactile hand rails, <code>false</code> if not, <code>undefined</code> if condition is unknown.</p> hasTactileMap<code>boolean</code><p><code>true</code> if the signage has a tactile map, <code>false</code> if not.</p> hasTactileNorthMarkers<code>boolean</code><p><code>true</code> if the signage has tactile north markers, <code>false</code> if not, <code>undefined</code> if condition is unknown.</p> <p>https://twitter.com/saizai/status/1210352258950598656</p> hasTactilePaving<code>boolean</code><p><code>true</code> if the signage has tactile paving, <code>false</code> if not.</p> hasTactileRoomNames<code>boolean</code><p><code>true</code> if the signage has tactile room names, <code>false</code> if not, <code>undefined</code> if condition is unknown.</p> hasText<code>boolean</code><p><code>true</code> if the signage has text features, <code>false</code> if not.</p> hasVideo<code>boolean</code><p><code>true</code> if the signage has video, <code>false</code> if not.</p> hasVirtualMap<code>boolean</code><p><code>true</code> if the signage has a virtual map, <code>false</code> if not.</p> highLegibility<code>boolean</code><p><code>true</code> if the signage has high legibility, <code>false</code> if not.</p> interactions Object with one or more of these keys:  <p> <code>findYourDestination</code> <code>locateYourself</code> <code>useSitemap</code> </p>  Values must be of type InteractionMode. <p>An object that indicates how the object can be interacted with.</p> <p>The keys of this object are the interaction types, and the values are InteractionMode objects.</p> isHighContrast<code>boolean</code><p><code>true</code> if the signage has high contrast, <code>false</code> if not.</p>"},{"location":"describing-objects/interfaces/#staff","title":"Staff","text":"<p>Describes the presence of staff and their qualifications and/or provided services.</p> NameTypecanSeeVisitorsFromInside<code>boolean</code><p><code>true</code> if the staff has means to see visitors from the inside at all times when the place is open (for example a window or CCTV system), <code>false</code> if not.</p> hasFreeAssistantForVisitors<code>boolean</code><p><code>true</code> if there is an assistant for the duration of the visit that is free of charge, <code>false</code> if not.</p> spokenLanguages<code>string</code>[]<p>Languages that the staff speaks, including sign language variants.</p> <p>Uses IETF language codes.</p>"},{"location":"describing-objects/interfaces/#stairs","title":"Stairs","text":"<p>The <code>Stairs</code> interface describes one or more walkable stairs.</p> NameTypealternativeMobileEquipmentIds<code>string</code>[]<p>You SHOULD reference alternative equipment IDs with this field, for example elevators, escalators, or hoists.</p> count<code>number</code><p>Number of steps.</p> floors<code>string</code>[]<p>Floor numbers that are accessible via these stairs.</p> grabBarsGrabBars<p>Grab bars belonging to the stairs.</p> hasAntiSlipNosing<code>boolean</code><p><code>true</code> if all relevant steps are made with anti-slip material.</p> hasBrailleSignage<code>boolean</code><p><code>true</code> if there is braille navigation in this staircase, <code>false</code> if not.</p> hasHandRail<code>boolean</code><p><code>true</code> if there is a handrail covering all relevant steps, <code>false</code> if not.</p> hasHighContrastNosing<code>boolean</code><p><code>true</code> if all relevant steps have a high contrast nosing.</p> hasMetalGrating<code>boolean</code><p>Do the stairs have metal grating? This is difficult to navigate for people with assistance dogs.</p> hasTactileSafetyStrips<code>boolean</code><p><code>true</code> if all relevant steps have tactile safety surfaces, used as warnings, implying textures detectable with the touch of a foot or sweep of a cane.</p> hasTactileSignage<code>boolean</code><p><code>true</code> if there is tactile navigation in this staircase, <code>false</code> if not.</p> isSpiral<code>boolean</code><p><code>true</code> if the stairs are spiral, <code>false</code> if not.</p> isWellLit<code>boolean</code><p>Are the stairs and podests well lit?</p> nameLocalizedString<p>If there are multiple staircase, you SHOULD indicate a name for this staircase here.</p> stepHeightLength<p>Indicates how high the steps if these stairs are (can be a range).</p>"},{"location":"describing-objects/interfaces/#structuredaddress","title":"StructuredAddress","text":"<p>The address of a places as Address as a series of structured attributes.</p> NameTypeareasLocalizedString[]<p>An array of named areas below the district and above street. In some regions such areas might also contain street names, when individual street segments have names separate from the name of the whole road.</p> buildingLocalizedString<p>Building name</p> cityLocalizedString<p>The name of the primary locality of the place.</p> countryCode<code>string</code><p>A three-letter country code in ISO 3166-1 alpha-3, see https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3</p> countyLocalizedString<p>A division of a state; typically a secondary-level administrative division of a country or equivalent.</p> districtLocalizedString<p>A division of city; typically an administrative unit within a larger city or a customary name of a city's neighborhood.</p> houseLocalizedString<p>House or street number.</p> levelIndex<code>number</code><p>Relative in relation to other levels. <code>0</code> for ground level must have index 0, <code>1</code> for first level, etc. You can use half numbers for levels like <code>1.5</code>.</p> levelNameLocalizedString<p>Name of the level. Example: <code>{ en: \"Floor 1\" }</code>, <code>{ en: \"Ground level\" }</code>.</p> postalCodeLocalizedString<p>An alphanumeric string included in a postal address to facilitate mail sorting (a.k.a. post code, postcode, or ZIP code).</p> regionsLocalizedString[]<p>For address conventions where more than to levels of named areas above the city level are in use, the regions attribute provides an array with all additional area names, ordered by decreasing size (starting with the highest subdivision below state)</p> roomLocalizedString<p>Room name. Example: <code>{ en: \"Meeting room \u2018Rome\u2019\" }</code>.</p> roomNumberLocalizedString<p>Room number. Example: <code>{ en: \"B-101\" }</code>.</p> stateLocalizedString<p>A division of a country; typically a first-level administrative division of a country and/or a geographical region.</p> stateCode<code>string</code><p>A code/abbreviation for the state division of a country.</p> streetLocalizedString<p>Street name (in practice may also contain street number).</p> textLocalizedString<p>A displayable, formatted address as rich text.</p>"},{"location":"describing-objects/interfaces/#surface","title":"Surface","text":"<p>Describes the surface of a ground or path.</p> NameTypelateralSlopeSlopelongitudinalSlopeSlopesmoothnessOne of the following strings:  <p> <code>bad</code> <code>excellent</code> <code>good</code> <code>horrible</code> <code>impassable</code> <code>intermediate</code> <code>very_bad</code> <code>very_good</code> <code>very_horrible</code> </p> <p>According to https://wiki.openstreetmap.org/wiki/Key:smoothness</p> turningSpaceLength<p>Turning space that this ground provides to people.</p> typesArray of one or more of these strings:  <p> <code>acrylic</code> <code>aluminium</code> <code>anti-slip</code> <code>artificial</code> <code>artificial_grass</code> <code>artificial_turf</code> <code>asfalto</code> <code>ash</code> <code>asphalt</code> <code>astroturf</code> <code>bamboo</code> <code>bare_rock</code> <code>bark</code> <code>barkchips</code> <code>bedrock</code> <code>bitumen</code> <code>bituminous</code> <code>block</code> <code>boardwalk</code> <code>boulders</code> <code>brick</code> <code>brick_weave</code> <code>bricks</code> <code>bushes</code> <code>carpet</code> <code>cement</code> <code>chalk</code> <code>chipseal</code> <code>cinder</code> <code>clay</code> <code>cobblestone</code> <code>compacted</code> <code>compacted_gravel</code> <code>composite</code> <code>con</code> <code>concrete</code> <code>concrete_slab</code> <code>concrete_slabs</code> <code>construction</code> <code>coral</code> <code>coral_sand</code> <code>crushed_limestone</code> <code>crushed_shells</code> <code>debris</code> <code>decoturf</code> <code>dirt</code> <code>earth</code> <code>enrob\u00e9</code> <code>fine_gravel</code> <code>fine_sand</code> <code>flagstone</code> <code>footway</code> <code>glass</code> <code>goudron</code> <code>granite</code> <code>grass</code> <code>grass_paver</code> <code>grass_scrub</code> <code>grassland</code> <code>grating</code> <code>gravel</code> <code>green</code> <code>grit</code> <code>ground</code> <code>hardcore</code> <code>ice</code> <code>ice_road</code> <code>interlock</code> <code>iron</code> <code>laterite</code> <code>lawn</code> <code>leaves</code> <code>limerock</code> <code>limestone</code> <code>linoleum</code> <code>loose_gravel</code> <code>marble</code> <code>marble_plate</code> <code>meadow</code> <code>metal</code> <code>metal_grid</code> <code>mixed</code> <code>moss</code> <code>mud</code> <code>mulch</code> <code>native</code> <code>natural</code> <code>none</code> <code>oil</code> <code>overgrown</code> <code>path</code> <code>paved</code> <code>pavement</code> <code>paving</code> <code>paving_stone</code> <code>paving_stones</code> <code>peat</code> <code>pebbles</code> <code>pebblestone</code> <code>plank</code> <code>plastic</code> <code>plates</code> <code>rasin</code> <code>residential</code> <code>rock</code> <code>rocks</code> <code>rocky</code> <code>roman_paving</code> <code>rubber</code> <code>rubbercrumb</code> <code>rubble</code> <code>salt</code> <code>sand</code> <code>sandstone</code> <code>sawdust</code> <code>scree</code> <code>scrub</code> <code>sealed</code> <code>sett</code> <code>shell</code> <code>shells</code> <code>shingle</code> <code>slabs</code> <code>snow</code> <code>soil</code> <code>spur</code> <code>steel</code> <code>stepping_stones</code> <code>stone</code> <code>stones</code> <code>synthetic</code> <code>tactile_paving</code> <code>tar</code> <code>tared</code> <code>tarmac</code> <code>tartan</code> <code>terra</code> <code>terre</code> <code>tile</code> <code>tiles</code> <code>timber</code> <code>track</code> <code>trail</code> <code>trees</code> <code>tuff</code> <code>turf</code> <code>undefined</code> <code>unhewn_cobblestone</code> <code>unpaved</code> <code>unpaved2</code> <code>unpaved33</code> <code>unpaved_minor</code> <code>unsealed</code> <code>water</code> <code>wood</code> <code>wood_chips</code> <code>woodchips</code> <code>zebra</code> </p> <p>According to https://wiki.openstreetmap.org/wiki/Key:surface</p>"},{"location":"describing-objects/interfaces/#techcombination","title":"TechCombination","text":"<p>Describes a combination of technologies that are used together to achieve a specific goal.</p> <p>The <code>uris</code> property is required.</p> NameTypedescriptionLocalizedString<p>Localizable description of the combination. Can describe in which mode or for what goal the tech is used.</p> nameLocalizedString<p>Localizable name/title of the combination. Can describe in which mode or for what goal the tech is used.</p> uris*<code>string</code>[]<p>URIs of technologies that are combined together to form this tech combination. Use RDF if possible.</p> <p>Supported prefix examples:</p> <ul> <li><code>wikidata:Q117266</code> for a banana connector (https://www.wikidata.org/wiki/Q117266)</li> <li><code>openstreetmap:way/123</code> for tying the tech to a specific location on the planet</li> <li><code>wikipedia:Banana connector</code> for a banana connector (https://en.wikipedia.org/wiki/Banana_connector)</li> </ul>"},{"location":"describing-objects/interfaces/#toilet","title":"Toilet","text":"<p>Describes a single toilet that can be inside a restroom or cabin.</p> NameTypeflushMechanismDistanceFromToiletLength<p>Indicates how far the flush mechanism(s) from the toilet, from the perspective of a the floor plan. If the flush mechanism is right behind the toilet, this is a 0 length.</p> grabBarsGrabBars<p>Object describing the grab bars.</p> hasAutomaticFlush<code>boolean</code><p><code>true</code> if the toilet is automatically flushing after use.</p> heightOfBaseLength<p>Indicates the height of the toilet\u2019s base.</p> interactions Object with one or more of these keys:  <p> <code>flush</code> <code>secondaryFlush</code> <code>spray</code> <code>use</code> </p>  Values must be of type InteractionMode. <p>An object that indicates how the object can be interacted with.</p> <p>The keys of this object are the interaction types, and the values are InteractionMode objects.</p> isLatrine<code>boolean</code><p>Indicates whether the toilet is a latrine.</p> isSquatToilet<code>boolean</code><p>Indicates whether the toilet is a squat toilet.</p> isUrinal<code>boolean</code><p>Indicates whether the toilet is a urinal.</p> spaceInFrontLength<p>How much space is in front of the toilet?</p> spaceOnUsersLeftSideLength<p>How much space is on the left side of the toilet? (from the perspective of somebody using the toilet)</p> spaceOnUsersRightSideLength<p>How much space is on the right side of the toilet? (from the perspective of somebody using the toilet)</p>"},{"location":"describing-objects/interfaces/#washbasin","title":"WashBasin","text":"<p>Describes a wash basin.</p> NameTypeaccessibleWithWheelchair<code>boolean</code><p><code>true</code> if the wash basin is accessible with wheelchairs, <code>false</code> if not.</p> heightLength<p>Defines at which height is the wash basin's top</p> interactions Object with one or more of these keys:  <p> <code>changeTemperature</code> <code>changeWaterPressure</code> <code>getCarbonizedWater</code> <code>getColdWater</code> <code>getHotWater</code> <code>getPaperTowel</code> <code>getTowel</code> <code>sanitizeHands</code> <code>useAirDryer</code> <code>useSoap</code> <code>useWater</code> <code>useWaterJet</code> <code>useWaterSpray</code> </p>  Values must be of type InteractionMode. <p>An object that indicates how the object can be interacted with.</p> <p>The keys of this object are the interaction types, and the values are InteractionMode objects.</p> isLocatedInsideRestroom<code>boolean</code><p><code>true</code> if the restroom's wash basin is inside the cabin, <code>false</code> if not.</p> spaceBelowDepthLength<p>How deep is the space below the wash basin?</p> spaceBelowHeightLength<p>How high is the space below the wash basin?</p>"},{"location":"describing-objects/interfaces/#wheelchairparking","title":"WheelchairParking","text":"<p>Describes one or more wheelchair parking lots.</p> NameTypecount<code>number</code><p>Defines many wheelchair accessible parking lots are provided</p> distanceToEntranceLength<p>How far away is the parking from the main entrance? If there is a separate wheelchair entrance, the distance to this entrance MUST be used.</p> hasDedicatedSignage<code>boolean</code><p><code>true</code> if there is dedicated signage at all relevant turning points from the street to the parking, <code>false</code> if not, <code>undefined</code> if this is unknown.</p> interactions Object with one or more of these keys:  <p> <code>arrive</code> <code>enterVehicle</code> <code>exitVehicle</code> <code>park</code> </p>  Values must be of type InteractionMode. <p>An object that indicates how the object can be interacted with.</p> <p>The keys of this object are the interaction types, and the values are InteractionMode objects.</p> isLocatedInside<code>boolean</code><p><code>true</code> if the parking is inside a building or under a roof, <code>false</code> if not, <code>undefined</code> if unknown.</p> lengthLength<p>Length constraint of the parking lots.</p> locationLocalizedString<p>Describes where the parking is located.</p> maxVehicleHeightLength<p>Maximal allowed vehicle height for users of this parking.</p> neededParkingPermitsLocalizedString[]<p>List of permit names that allow using this parking.</p> widthLength<p>Width constraint of the parking lots.</p>"},{"location":"describing-objects/interfaces/#wheelchairplaces","title":"WheelchairPlaces","text":"<p>The WheelchairPlaces interface describes the presence of reserved spots for wheelchairs.</p> <p>The <code>count</code> property is required.</p> NameTypecount*<code>number</code><p>The number of designated places for wheelchairs, for example, in a cinema or theater.</p> hasSpaceForAssistant<code>boolean</code><p>Is there additional space for an assistant?</p> wheelchairUserCapacity<code>number</code><p>The number of people using a wheelchair that can be accomodated at the same time. Use this when there is no designated space for wheelchair users, but the number is known.</p>"},{"location":"describing-objects/interfaces/#wifiaccessibility","title":"WifiAccessibility","text":"<p>Describes the presence of staff and their qualifications and/or provided services.</p> NameTypeaccessArray of one or more of these strings:  <p> <code>customers</code> <code>delivery</code> <code>designated</code> <code>disabled</code> <code>emergency</code> <code>employees</code> <code>no</code> <code>permissive</code> <code>permit</code> <code>private</code> <code>public</code> <code>residents</code> <code>yes</code> </p> <p>Describes who can access the wifi.</p> descriptionWhereToGetLoginDataLocalizedString<p>Describes where you get the login data / guest pass.</p> hasCaptivePortal<code>boolean</code><p><code>true</code> if the wifi has a captive portal website.</p> hasFixedPassword<code>boolean</code><p><code>true</code> if the wifi has a fixed password. Knowing this password must be enough to enter and use the wifi.</p> isCaptivePortalAccessible<code>boolean</code><p><code>true</code> if the wifi captive portal is accessible (WAI/ARIA).</p> isOpenToEveryone<code>boolean</code><p><code>true</code> if the wifi is open to everyone, <code>false</code> if it is explicitly not.</p> isOpenToStaff<code>boolean</code><p><code>true</code> if the wifi is open to explicit place staff, <code>false</code> if explicitly not.</p> isOpenToVisitors<code>boolean</code><p><code>true</code> if the wifi is open to explicit place visitors, <code>false</code> if explicitly not.</p> needsGuestPass<code>boolean</code><p><code>true</code> if you need a personalized guest pass / code / password to use the wifi, <code>false</code> if not.</p> password<code>string</code><p>A string with the Wifi password. Only use this attribute if security allows to publish this info online publicly.</p> ssid<code>string</code><p>A string with the Wifi name (SSID). Only use this attribute if security allows to publish this info online publicly.</p> usageFeeCurrencyValue[]<p>Describes if you need to pay a usage fee to use the wifi, or if no fee is needed.</p>"},{"location":"describing-objects/type-aliases/","title":"Type Aliases","text":"<p>Besides interfaces and constants, A11yJSON defines the following bare types.</p> <p>Some lack proper formatting in the documentation. Fixes in <code>tools/generate-overview.ts</code> are welcome!</p>"},{"location":"describing-objects/type-aliases/#acceleration","title":"Acceleration","text":"<p>Definition: Quantity\u00a0|\u00a0<code>string</code></p>"},{"location":"describing-objects/type-aliases/#accesstype","title":"AccessType","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>private</code></p> </li> <li> <p><code>public</code></p> </li> <li> <p><code>customers</code></p> </li> <li> <p><code>permissive</code></p> </li> <li> <p><code>yes</code></p> </li> <li> <p><code>no</code></p> </li> <li> <p><code>permit</code></p> </li> <li> <p><code>designated</code></p> </li> <li> <p><code>delivery</code></p> </li> <li> <p><code>emergency</code></p> </li> <li> <p><code>residents</code></p> </li> <li> <p><code>employees</code></p> </li> <li> <p><code>disabled</code></p> </li> <li> <p><code>yes</code></p> </li> <li> <p><code>no</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#brightness","title":"Brightness","text":"<p>Definition: Quantity\u00a0|\u00a0<code>string</code></p>"},{"location":"describing-objects/type-aliases/#deskinteraction","title":"DeskInteraction","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>changeHeight</code></p> </li> <li> <p><code>savePreset</code></p> </li> <li> <p><code>enqueue</code></p> </li> <li> <p><code>checkIn</code></p> </li> <li> <p><code>checkOut</code></p> </li> <li> <p><code>ringBell</code></p> </li> <li> <p><code>pay</code></p> </li> <li> <p><code>handoverLuggage</code></p> </li> <li> <p><code>handover</code></p> </li> <li> <p><code>getReturn</code></p> </li> <li> <p><code>getFood</code></p> </li> <li> <p><code>getShoppingBag</code></p> </li> <li> <p><code>scan</code></p> </li> <li> <p><code>selfCheckout</code></p> </li> <li> <p><code>open</code></p> </li> <li> <p><code>close</code></p> </li> <li> <p><code>unlock</code></p> </li> <li> <p><code>lock</code></p> </li> <li> <p><code>unlockAndLock</code></p> </li> <li> <p><code>openAndClose</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#direction","title":"Direction","text":"<p>Describes a physical direction, from the perspective of a person facing forward.</p> <p>Definition: one of the following strings:</p> <ul> <li> <p><code>up</code></p> </li> <li> <p><code>down</code></p> </li> <li> <p><code>left</code></p> </li> <li> <p><code>right</code></p> </li> <li> <p><code>forward</code></p> </li> <li> <p><code>backward</code></p> </li> <li> <p><code>clockwise</code></p> </li> <li> <p><code>counterclockwise</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#directionaxis","title":"DirectionAxis","text":"<p>Describes a physical direction axis relative to a person\u2019s body.</p> <p>Definition: one of the following strings:</p> <ul> <li> <p><code>sagittal</code></p> </li> <li> <p><code>coronal</code></p> </li> <li> <p><code>axial</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#doorinteraction","title":"DoorInteraction","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>ringDoorbell</code></p> </li> <li> <p><code>open</code></p> </li> <li> <p><code>close</code></p> </li> <li> <p><code>unlock</code></p> </li> <li> <p><code>lock</code></p> </li> <li> <p><code>unlockAndLock</code></p> </li> <li> <p><code>openAndClose</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#equipmentinteraction","title":"EquipmentInteraction","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>use</code></p> </li> <li> <p><code>selectFloor</code></p> </li> <li> <p><code>arriveAtFloor</code></p> </li> <li> <p><code>callEmergency</code></p> </li> <li> <p><code>ride</code></p> </li> <li> <p><code>travel</code></p> </li> <li> <p><code>buy</code></p> </li> <li> <p><code>sell</code></p> </li> <li> <p><code>call</code></p> </li> <li> <p><code>understand</code></p> </li> <li> <p><code>sleep</code></p> </li> <li> <p><code>toggle</code></p> </li> <li> <p><code>engage</code></p> </li> <li> <p><code>flush</code></p> </li> <li> <p><code>scan</code></p> </li> <li> <p><code>handover</code></p> </li> <li> <p><code>enable</code></p> </li> <li> <p><code>disable</code></p> </li> <li> <p><code>locateYourself</code></p> </li> <li> <p><code>findYourDestination</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#equipmenttype","title":"EquipmentType","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>bed</code></p> </li> <li> <p><code>wardrobe</code></p> </li> <li> <p><code>elevator</code></p> </li> <li> <p><code>escalator</code></p> </li> <li> <p><code>movingWalkway</code></p> </li> <li> <p><code>ramp</code></p> </li> <li> <p><code>hoist</code></p> </li> <li> <p><code>stairLift</code></p> </li> <li> <p><code>switch</code></p> </li> <li> <p><code>sitemap</code></p> </li> <li> <p><code>vendingMachine</code></p> </li> <li> <p><code>intercom</code></p> </li> <li> <p><code>powerOutlet</code></p> </li> <li> <p><code>flushMechanism</code></p> </li> <li> <p><code>bodyScanner</code></p> </li> <li> <p><code>luggageScanner</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#force","title":"Force","text":"<p>Definition: Quantity\u00a0|\u00a0<code>string</code></p>"},{"location":"describing-objects/type-aliases/#genericinteraction","title":"GenericInteraction","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>watchMovies</code></p> </li> <li> <p><code>watchPlays</code></p> </li> <li> <p><code>explore</code></p> </li> <li> <p><code>visit</code></p> </li> <li> <p><code>roam</code></p> </li> <li> <p><code>read</code></p> </li> <li> <p><code>rent</code></p> </li> <li> <p><code>watch</code></p> </li> <li> <p><code>see</code></p> </li> <li> <p><code>listen</code></p> </li> <li> <p><code>getFood</code></p> </li> <li> <p><code>eat</code></p> </li> <li> <p><code>pay</code></p> </li> <li> <p><code>buy</code></p> </li> <li> <p><code>sell</code></p> </li> <li> <p><code>workHere</code></p> </li> <li> <p><code>arrive</code></p> </li> <li> <p><code>checkIn</code></p> </li> <li> <p><code>checkOut</code></p> </li> <li> <p><code>useLockers</code></p> </li> <li> <p><code>change</code></p> </li> <li> <p><code>use</code></p> </li> <li> <p><code>book</code></p> </li> <li> <p><code>play</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#grabbarsinteraction","title":"GrabBarsInteraction","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>localizeYourself</code></p> </li> <li> <p><code>findYourDestination</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#hertz","title":"Hertz","text":"<p>Definition: Quantity\u00a0|\u00a0<code>string</code></p>"},{"location":"describing-objects/type-aliases/#ietflanguagetag","title":"IETFLanguageTag","text":"<p>Defines a spoken or written language in IETF language tag format.</p> <p>Definition: <code>string</code></p>"},{"location":"describing-objects/type-aliases/#intercominteraction","title":"IntercomInteraction","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>ring</code></p> </li> <li> <p><code>call</code></p> </li> <li> <p><code>hangUp</code></p> </li> <li> <p><code>open</code></p> </li> <li> <p><code>close</code></p> </li> <li> <p><code>identify</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#length","title":"Length","text":"<p>Definition: Quantity\u00a0|\u00a0<code>string</code></p>"},{"location":"describing-objects/type-aliases/#localizedstring","title":"LocalizedString","text":"<p>Definition:  Object with one or more of these keys:</p> <p> <code>string</code> </p> <p>Values must be of type <code>string</code>.</p>"},{"location":"describing-objects/type-aliases/#mass","title":"Mass","text":"<p>Definition: Quantity\u00a0|\u00a0<code>string</code></p>"},{"location":"describing-objects/type-aliases/#mediainteraction","title":"MediaInteraction","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>watch</code></p> </li> <li> <p><code>listen</code></p> </li> <li> <p><code>feel</code></p> </li> <li> <p><code>discover</code></p> </li> <li> <p><code>open</code></p> </li> <li> <p><code>close</code></p> </li> <li> <p><code>rent</code></p> </li> <li> <p><code>recognize</code></p> </li> <li> <p><code>browse</code></p> </li> <li> <p><code>read</code></p> </li> <li> <p><code>interact</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#mediatype","title":"MediaType","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>document</code></p> </li> <li> <p><code>menu</code></p> </li> <li> <p><code>guide</code></p> </li> <li> <p><code>tour</code></p> </li> <li> <p><code>presentation</code></p> </li> <li> <p><code>exhibit</code></p> </li> <li> <p><code>movie</code></p> </li> <li> <p><code>play</code></p> </li> <li> <p><code>screen</code></p> </li> <li> <p><code>website</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#mirrorinteraction","title":"MirrorInteraction","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>turn</code></p> </li> <li> <p><code>adjust</code></p> </li> <li> <p><code>move</code></p> </li> <li> <p><code>clean</code></p> </li> <li> <p><code>use</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#operator","title":"Operator","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>&lt;</code></p> </li> <li> <p><code>&lt;=</code></p> </li> <li> <p><code>==</code></p> </li> <li> <p><code>&gt;=</code></p> </li> <li> <p><code>&gt;</code></p> </li> <li> <p><code>=</code></p> </li> <li> <p><code>~</code></p> </li> <li> <p><code>~=</code></p> </li> <li> <p><code>!=</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#parkinginteraction","title":"ParkingInteraction","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>park</code></p> </li> <li> <p><code>enterVehicle</code></p> </li> <li> <p><code>exitVehicle</code></p> </li> <li> <p><code>arrive</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#paymentnteraction","title":"Paymentnteraction","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>pay</code></p> </li> <li> <p><code>checkIn</code></p> </li> <li> <p><code>logIn</code></p> </li> <li> <p><code>logOut</code></p> </li> <li> <p><code>register</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#queuesysteminteraction","title":"QueueSystemInteraction","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>enqueue</code></p> </li> <li> <p><code>skipQueue</code></p> </li> <li> <p><code>wait</code></p> </li> <li> <p><code>leaveQueue</code></p> </li> <li> <p><code>arrive</code></p> </li> <li> <p><code>checkIn</code></p> </li> <li> <p><code>checkOut</code></p> </li> <li> <p><code>getTicket</code></p> </li> <li> <p><code>getOnesTurn</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#restroomsignicon","title":"RestroomSignIcon","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>allGender</code></p> </li> <li> <p><code>female</code></p> </li> <li> <p><code>male</code></p> </li> <li> <p><code>personInWheelchair</code></p> </li> <li> <p><code>changingTable</code></p> </li> <li> <p><code>baby</code></p> </li> <li> <p><code>family</code></p> </li> <li> <p><code>urinal</code></p> </li> <li> <p><code>washBasin</code></p> </li> <li> <p><code>toiletBowl</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#roominteraction","title":"RoomInteraction","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>enter</code></p> </li> <li> <p><code>exit</code></p> </li> <li> <p><code>stand</code></p> </li> <li> <p><code>sit</code></p> </li> <li> <p><code>see</code></p> </li> <li> <p><code>sleep</code></p> </li> <li> <p><code>play</code></p> </li> <li> <p><code>wait</code></p> </li> <li> <p><code>storeThings</code></p> </li> <li> <p><code>lookAround</code></p> </li> <li> <p><code>openWindow</code></p> </li> <li> <p><code>closeWindow</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#seatinteraction","title":"SeatInteraction","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>sit</code></p> </li> <li> <p><code>fold</code></p> </li> <li> <p><code>unfold</code></p> </li> <li> <p><code>move</code></p> </li> <li> <p><code>adjust</code></p> </li> <li> <p><code>adjustHeight</code></p> </li> <li> <p><code>adjustSeatingSurface</code></p> </li> <li> <p><code>adjustSeatingAngle</code></p> </li> <li> <p><code>adjustArmRests</code></p> </li> <li> <p><code>adjustHeadRest</code></p> </li> <li> <p><code>adjustLegRest</code></p> </li> <li> <p><code>adjustBackRest</code></p> </li> <li> <p><code>adjustFootRest</code></p> </li> <li> <p><code>adjustSeatBelt</code></p> </li> <li> <p><code>adjustSeatBeltLength</code></p> </li> <li> <p><code>adjustSeatBeltHeight</code></p> </li> <li> <p><code>adjustSeatBeltAngle</code></p> </li> <li> <p><code>adjustSeatBeltPosition</code></p> </li> <li> <p><code>adjustSeatBeltTension</code></p> </li> <li> <p><code>adjustSeatBeltLock</code></p> </li> <li> <p><code>connectSeatbelt</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#showerinteraction","title":"ShowerInteraction","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>transfer</code></p> </li> <li> <p><code>wash</code></p> </li> <li> <p><code>useShampoo</code></p> </li> <li> <p><code>useShowerGel</code></p> </li> <li> <p><code>useSoap</code></p> </li> <li> <p><code>useConditioner</code></p> </li> <li> <p><code>useShowerCurtain</code></p> </li> <li> <p><code>useShowerHead</code></p> </li> <li> <p><code>useSupport</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#signageinteraction","title":"SignageInteraction","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>locateYourself</code></p> </li> <li> <p><code>findYourDestination</code></p> </li> <li> <p><code>useSitemap</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#slope","title":"Slope","text":"<p>Definition: Quantity\u00a0|\u00a0<code>string</code></p>"},{"location":"describing-objects/type-aliases/#smokingpolicy","title":"SmokingPolicy","text":"<p>Describes the smoking policy for visitors of a place.</p> <p>Definition: One of the following strings:</p> <p> <code>allowedEverywhere</code> <code>dedicatedToSmoking</code> <code>inIsolatedArea</code> <code>inSeparateArea</code> <code>onlyOutside</code> <code>prohibited</code> </p>"},{"location":"describing-objects/type-aliases/#smoothnesstype","title":"SmoothnessType","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>excellent</code></p> </li> <li> <p><code>good</code></p> </li> <li> <p><code>intermediate</code></p> </li> <li> <p><code>bad</code></p> </li> <li> <p><code>horrible</code></p> </li> <li> <p><code>impassable</code></p> </li> <li> <p><code>very_bad</code></p> </li> <li> <p><code>very_horrible</code></p> </li> <li> <p><code>very_good</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#speed","title":"Speed","text":"<p>Definition: Quantity\u00a0|\u00a0<code>string</code></p>"},{"location":"describing-objects/type-aliases/#surfacetype","title":"SurfaceType","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>acrylic</code></p> </li> <li> <p><code>aluminium</code></p> </li> <li> <p><code>anti-slip</code></p> </li> <li> <p><code>artificial</code></p> </li> <li> <p><code>artificial_grass</code></p> </li> <li> <p><code>artificial_turf</code></p> </li> <li> <p><code>asfalto</code></p> </li> <li> <p><code>ash</code></p> </li> <li> <p><code>asphalt</code></p> </li> <li> <p><code>astroturf</code></p> </li> <li> <p><code>bamboo</code></p> </li> <li> <p><code>bare_rock</code></p> </li> <li> <p><code>bark</code></p> </li> <li> <p><code>barkchips</code></p> </li> <li> <p><code>bedrock</code></p> </li> <li> <p><code>bitumen</code></p> </li> <li> <p><code>bituminous</code></p> </li> <li> <p><code>block</code></p> </li> <li> <p><code>boardwalk</code></p> </li> <li> <p><code>boulders</code></p> </li> <li> <p><code>brick</code></p> </li> <li> <p><code>brick_weave</code></p> </li> <li> <p><code>bricks</code></p> </li> <li> <p><code>bushes</code></p> </li> <li> <p><code>carpet</code></p> </li> <li> <p><code>cement</code></p> </li> <li> <p><code>chalk</code></p> </li> <li> <p><code>chipseal</code></p> </li> <li> <p><code>cinder</code></p> </li> <li> <p><code>clay</code></p> </li> <li> <p><code>cobblestone</code></p> </li> <li> <p><code>compacted</code></p> </li> <li> <p><code>compacted_gravel</code></p> </li> <li> <p><code>composite</code></p> </li> <li> <p><code>con</code></p> </li> <li> <p><code>concrete</code></p> </li> <li> <p><code>concrete_slab</code></p> </li> <li> <p><code>concrete_slabs</code></p> </li> <li> <p><code>construction</code></p> </li> <li> <p><code>coral</code></p> </li> <li> <p><code>coral_sand</code></p> </li> <li> <p><code>crushed_limestone</code></p> </li> <li> <p><code>crushed_shells</code></p> </li> <li> <p><code>debris</code></p> </li> <li> <p><code>decoturf</code></p> </li> <li> <p><code>dirt</code></p> </li> <li> <p><code>earth</code></p> </li> <li> <p><code>enrob\u00e9</code></p> </li> <li> <p><code>fine_gravel</code></p> </li> <li> <p><code>fine_sand</code></p> </li> <li> <p><code>flagstone</code></p> </li> <li> <p><code>footway</code></p> </li> <li> <p><code>glass</code></p> </li> <li> <p><code>goudron</code></p> </li> <li> <p><code>granite</code></p> </li> <li> <p><code>grass</code></p> </li> <li> <p><code>grass_paver</code></p> </li> <li> <p><code>grass_scrub</code></p> </li> <li> <p><code>grassland</code></p> </li> <li> <p><code>grating</code></p> </li> <li> <p><code>gravel</code></p> </li> <li> <p><code>green</code></p> </li> <li> <p><code>grit</code></p> </li> <li> <p><code>ground</code></p> </li> <li> <p><code>hardcore</code></p> </li> <li> <p><code>ice</code></p> </li> <li> <p><code>ice_road</code></p> </li> <li> <p><code>interlock</code></p> </li> <li> <p><code>iron</code></p> </li> <li> <p><code>laterite</code></p> </li> <li> <p><code>lawn</code></p> </li> <li> <p><code>leaves</code></p> </li> <li> <p><code>limerock</code></p> </li> <li> <p><code>limestone</code></p> </li> <li> <p><code>linoleum</code></p> </li> <li> <p><code>loose_gravel</code></p> </li> <li> <p><code>marble</code></p> </li> <li> <p><code>marble_plate</code></p> </li> <li> <p><code>meadow</code></p> </li> <li> <p><code>metal</code></p> </li> <li> <p><code>metal_grid</code></p> </li> <li> <p><code>mixed</code></p> </li> <li> <p><code>moss</code></p> </li> <li> <p><code>mud</code></p> </li> <li> <p><code>mulch</code></p> </li> <li> <p><code>native</code></p> </li> <li> <p><code>natural</code></p> </li> <li> <p><code>none</code></p> </li> <li> <p><code>oil</code></p> </li> <li> <p><code>overgrown</code></p> </li> <li> <p><code>path</code></p> </li> <li> <p><code>paved</code></p> </li> <li> <p><code>pavement</code></p> </li> <li> <p><code>paving</code></p> </li> <li> <p><code>paving_stone</code></p> </li> <li> <p><code>paving_stones</code></p> </li> <li> <p><code>peat</code></p> </li> <li> <p><code>pebbles</code></p> </li> <li> <p><code>pebblestone</code></p> </li> <li> <p><code>plank</code></p> </li> <li> <p><code>plastic</code></p> </li> <li> <p><code>plates</code></p> </li> <li> <p><code>rasin</code></p> </li> <li> <p><code>residential</code></p> </li> <li> <p><code>rock</code></p> </li> <li> <p><code>rocks</code></p> </li> <li> <p><code>rocky</code></p> </li> <li> <p><code>roman_paving</code></p> </li> <li> <p><code>rubber</code></p> </li> <li> <p><code>rubbercrumb</code></p> </li> <li> <p><code>rubble</code></p> </li> <li> <p><code>salt</code></p> </li> <li> <p><code>sand</code></p> </li> <li> <p><code>sandstone</code></p> </li> <li> <p><code>sawdust</code></p> </li> <li> <p><code>scree</code></p> </li> <li> <p><code>scrub</code></p> </li> <li> <p><code>sealed</code></p> </li> <li> <p><code>sett</code></p> </li> <li> <p><code>shell</code></p> </li> <li> <p><code>shells</code></p> </li> <li> <p><code>shingle</code></p> </li> <li> <p><code>slabs</code></p> </li> <li> <p><code>snow</code></p> </li> <li> <p><code>soil</code></p> </li> <li> <p><code>spur</code></p> </li> <li> <p><code>steel</code></p> </li> <li> <p><code>stepping_stones</code></p> </li> <li> <p><code>stone</code></p> </li> <li> <p><code>stones</code></p> </li> <li> <p><code>synthetic</code></p> </li> <li> <p><code>tactile_paving</code></p> </li> <li> <p><code>tar</code></p> </li> <li> <p><code>tared</code></p> </li> <li> <p><code>tarmac</code></p> </li> <li> <p><code>tartan</code></p> </li> <li> <p><code>terra</code></p> </li> <li> <p><code>terre</code></p> </li> <li> <p><code>tile</code></p> </li> <li> <p><code>tiles</code></p> </li> <li> <p><code>timber</code></p> </li> <li> <p><code>track</code></p> </li> <li> <p><code>trail</code></p> </li> <li> <p><code>trees</code></p> </li> <li> <p><code>tuff</code></p> </li> <li> <p><code>turf</code></p> </li> <li> <p><code>undefined</code></p> </li> <li> <p><code>unhewn_cobblestone</code></p> </li> <li> <p><code>unpaved</code></p> </li> <li> <p><code>unpaved2</code></p> </li> <li> <p><code>unpaved33</code></p> </li> <li> <p><code>unpaved_minor</code></p> </li> <li> <p><code>unsealed</code></p> </li> <li> <p><code>water</code></p> </li> <li> <p><code>wood</code></p> </li> <li> <p><code>wood_chips</code></p> </li> <li> <p><code>woodchips</code></p> </li> <li> <p><code>zebra</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#temperature","title":"Temperature","text":"<p>Definition: Quantity\u00a0|\u00a0<code>string</code></p>"},{"location":"describing-objects/type-aliases/#timeinterval","title":"TimeInterval","text":"<p>Definition: Quantity\u00a0|\u00a0<code>string</code></p>"},{"location":"describing-objects/type-aliases/#toiletinteraction","title":"ToiletInteraction","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>use</code></p> </li> <li> <p><code>flush</code></p> </li> <li> <p><code>secondaryFlush</code></p> </li> <li> <p><code>spray</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#urgency","title":"Urgency","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>alert</code></p> </li> <li> <p><code>alarm</code></p> </li> <li> <p><code>warning</code></p> </li> <li> <p><code>info</code></p> </li> <li> <p><code>debug</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#volume","title":"Volume","text":"<p>Definition: Quantity\u00a0|\u00a0<code>string</code></p>"},{"location":"describing-objects/type-aliases/#washbashininteraction","title":"WashBashinInteraction","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>changeTemperature</code></p> </li> <li> <p><code>changeWaterPressure</code></p> </li> <li> <p><code>useWater</code></p> </li> <li> <p><code>getHotWater</code></p> </li> <li> <p><code>getColdWater</code></p> </li> <li> <p><code>getCarbonizedWater</code></p> </li> <li> <p><code>useWaterJet</code></p> </li> <li> <p><code>useWaterSpray</code></p> </li> <li> <p><code>useSoap</code></p> </li> <li> <p><code>getTowel</code></p> </li> <li> <p><code>getPaperTowel</code></p> </li> <li> <p><code>useAirDryer</code></p> </li> <li> <p><code>sanitizeHands</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#wheelchairaccessibilitygrade","title":"WheelchairAccessibilityGrade","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>fully</code></p> </li> <li> <p><code>partially</code></p> </li> <li> <p><code>not</code></p> </li> </ul>"},{"location":"describing-objects/type-aliases/#wifiinteraction","title":"WifiInteraction","text":"<p>Definition: one of the following strings:</p> <ul> <li> <p><code>login</code></p> </li> <li> <p><code>register</code></p> </li> <li> <p><code>getPassword</code></p> </li> <li> <p><code>getGuestPass</code></p> </li> <li> <p><code>getTerms</code></p> </li> <li> <p><code>acceptTerms</code></p> </li> </ul>"}]}